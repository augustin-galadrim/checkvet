components:
- layout_properties: {slot: time_display_slot}
  name: time_display_1
  properties: {}
  type: form:Components.TimeDisplay
- layout_properties: {slot: default}
  name: header_nav_1
  properties: {active_tab: Archives}
  type: form:Components.HeaderNav
container:
  properties:
    html: "<!DOCTYPE html>\n<html lang=\"fr\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n      /* Base Styles, Resets, and Container */\n      * { box-sizing: border-box; font-family: Arial, sans-serif; margin: 0; padding: 0; }\n      body { background-color: #f5f5f5; height: 100vh; overflow: hidden; }\n      .container { display: flex; flex-direction: column; height: 100vh; max-width: 800px; margin: 0 auto; background-color: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\n      .fixed-section { background: white; z-index: 10; }\n\n      /* Action Bar and Controls */\n      .actions-row { \n        display: flex; \n        align-items: center; \n        padding: 15px 20px; \n        flex-wrap: wrap;\n      }\n      .actions-row .status-nav {\n        margin: 0 auto;\n      }\n      .create-button { padding: 8px 16px; background: #fff; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; }\n      .refresh-button { padding: 6px 6px 1px 6px; background: #fff; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; } /* Style for the icon button */\n      .search-bar { width: calc(100% - 40px); padding: 8px; border: 1px solid #ddd; border-radius: 4px; margin: 0 20px 15px 20px; }\n\n      /* Supervisor Tabs */\n      .supervisor-tabs { display: none; border-bottom: 1px solid #ddd; }\n      .sub-tab { flex: 1; text-align: center; padding: 12px; cursor: pointer; background: #f8f8f8; border-right: 1px solid #ddd; }\n      .sub-tab:last-child { border-right: none; }\n      .sub-tab.active { background: #fff; font-weight: bold; border-bottom: 2px solid #1a73e8; color: #1a73e8; }\n\n      /* Report List and Items */\n      .content-area { flex: 1; overflow-y: auto; }\n      .report-panel { display: none; padding: 20px; }\n      .report-panel.active { display: block; }\n\n      /* Section Header styles for alignment */\n      .section-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 20px;\n        border-bottom: 1px solid #eee;\n        padding-bottom: 15px;\n      }\n      .section-title {\n        font-size: 20px;\n        color: #333;\n        margin: 0;\n      }\n      .section-controls { display: flex; gap: 10px; align-items: center; }\n\n      .record-entry { display: flex; align-items: center; justify-content: space-between; border: 1px solid #ddd; border-radius: 4px; padding: 10px; margin-bottom: 10px; background: #fff; cursor: pointer; }\n      .record-subcase { flex: 1; padding: 0 10px; text-align: left; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; }\n      .trash-icon svg { width: 18px; height: 18px; fill: #888; transition: fill 0.2s; }\n      .trash-icon:hover svg { fill: #c00; }\n\n      /* Status filter bar styles */\n      .status-nav { display: flex; border: 1px solid #ddd; border-radius: 4px; overflow: hidden; }\n      .status-option { display: flex; align-items: center; padding: 8px 16px; gap: 8px; color: #333; cursor: pointer; text-decoration: none; background-color: #f8f8f8; border-right: 1px solid #ddd; }\n      .status-option:last-child { border-right: none; }\n      .status-option.active { background-color: #fff; color: #1a73e8; font-weight: bold; box-shadow: inset 0 -2px 0 #1a73e8; }\n      .icon { width: 18px; height: 18px; display: inline-flex; align-items: center; justify-content: center; }\n\n      /* Vet Modal Styles */\n      .vet-modal { display: none; position: fixed; z-index: 999; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); }\n      .modal-content { background-color: #fff; width: 300px; margin: 100px auto; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.3); position: relative; }\n      .modal-content h3 { margin-bottom: 15px; }\n      .vet-list { max-height: 200px; overflow-y: auto; margin-bottom: 15px; }\n      .vet-item { display: flex; align-items: center; margin-bottom: 8px; }\n      .vet-item label { margin-left: 8px; }\n      .modal-actions { display: flex; justify-content: flex-end; gap: 10px; }\n      .modal-actions button { padding: 6px 12px; border: 1px solid #ccc; background: #f8f8f8; border-radius: 4px; cursor: pointer; }\n      .vet-filter-button { padding: 8px 16px; background: #fff; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"fixed-section\">\n        <div anvil-slot=\"default\"></div>\n        <div class=\"actions-row\">\n          <button class=\"create-button\" id=\"createBtn\">+ Créer</button>\n          <nav class=\"status-nav\">\n            <a href=\"#\" class=\"status-option active\" data-filter=\"all\"><span class=\"icon\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"/></svg></span>Afficher tout</a>\n            <a href=\"#\" class=\"status-option\" data-filter=\"pending_correction\"><span class=\"icon\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/></svg></span>A corriger</a>\n            <a href=\"#\" class=\"status-option\" data-filter=\"validated\"><span class=\"icon\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"/></svg></span>Validé</a>\n            <a href=\"#\" class=\"status-option\" data-filter=\"sent\"><span class=\"icon\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/></svg></span>Envoyé</a>\n          </nav>\n          <div anvil-slot=\"time_display_slot\"></div>\n        </div>\n\n        <input type=\"text\" class=\"search-bar\" placeholder=\"Rechercher dans les rapports...\">\n\n        <div class=\"supervisor-tabs\" id=\"supervisorTabs\">\n          <div class=\"sub-tab active\" data-tab=\"my_reports\">Mes Rapports</div>\n          <div class=\"sub-tab\" data-tab=\"structure_reports\">Ma Structure</div>\n        </div>\n\n        <div class=\"content-area\">\n          <div class=\"report-panel active\" id=\"myReportsPanel\">\n            <div class=\"section-header\">\n              <h2 class=\"section-title\">Mes Rapports</h2>\n              <div class=\"section-controls\">\n                <button class=\"refresh-button\" title=\"Rafraîchir\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20px\" viewBox=\"0 0 24 24\" width=\"20px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/></svg></button>\n              </div>\n            </div>\n            <div id=\"myReportsContainer\"></div>\n          </div>\n\n          <div class=\"report-panel\" id=\"structureReportsPanel\">\n            <div class=\"section-header\">\n              <h2 class=\"section-title\">Ma Structure</h2>\n              <div class=\"section-controls\">\n                <button class=\"refresh-button\" title=\"Rafraîchir\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20px\" viewBox=\"0 0 24 24\" width=\"20px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/></svg></button>\n                <button class=\"vet-filter-button\" id=\"vetFilterBtn\">Filtrer par Vétérinaire</button>\n              </div>\n            </div>\n            <div id=\"structureReportsContainer\"></div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"vet-modal\" id=\"vetModal\">\n        <div class=\"modal-content\">\n          <h3>Trier par vétérinaire</h3>\n          <div class=\"vet-list\" id=\"vetList\"></div>\n          <div class=\"modal-actions\">\n            <button id=\"vetModalRetourBtn\">Retour</button>\n            <button id=\"vetModalApplyBtn\">Appliquer</button>\n          </div>\n        </div>\n      </div>\n\n      <script>\n        if (!window.__archives_form_globals) {\n          window.__archives_form_globals = true;\n          window.isSupervisor = false;\n          window.hasStructure = false;\n          window.activeSubTab = 'my_reports';\n          window.__affiliated_vets = [];\n\n          window.resetActiveTabState = function() {\n            window.activeSubTab = 'my_reports';\n            document.querySelectorAll('.sub-tab').forEach(tab => tab.classList.remove('active'));\n            const myReportsTab = document.querySelector('.sub-tab[data-tab=\"my_reports\"]');\n            if (myReportsTab) myReportsTab.classList.add('active');\n            document.querySelectorAll('.report-panel').forEach(panel => panel.classList.remove('active'));\n            const myReportsPanel = document.getElementById('myReportsPanel');\n            if(myReportsPanel) myReportsPanel.classList.add('active');\n          };\n\n          window.setupUI = function(isSupervisor, hasStructure, vetList, structureName) {\n            window.isSupervisor = isSupervisor;\n            window.hasStructure = hasStructure;\n            const supervisorTabs = document.getElementById('supervisorTabs');\n            if (supervisorTabs) supervisorTabs.style.display = (isSupervisor && hasStructure) ? 'flex' : 'none';\n            if (isSupervisor && hasStructure) {\n              window.__affiliated_vets = vetList || [];\n              renderVetCheckboxes();\n            }\n          };\n\n          const createReportElement = (report) => {\n            const entryDiv = document.createElement(\"div\");\n            entryDiv.className = \"record-entry\";\n            const patientNameDiv = document.createElement(\"div\");\n            patientNameDiv.className = \"record-subcase\";\n            patientNameDiv.textContent = report.name || \"(Aucun patient)\";\n            const vetNameDiv = document.createElement(\"div\");\n            if (window.isSupervisor && window.activeSubTab === 'structure_reports') {\n              vetNameDiv.className = \"record-subcase\";\n              vetNameDiv.textContent = report.vet_display_name || \"(Inconnu)\";\n            }\n            const dateDiv = document.createElement(\"div\");\n            dateDiv.className = \"record-subcase\";\n            dateDiv.textContent = formatLastModified(report.last_modified);\n            const statusDiv = document.createElement(\"div\");\n            statusDiv.className = \"record-subcase\";\n            statusDiv.textContent = report.statut || \"(Non spécifié)\";\n            const trashDiv = document.createElement(\"div\");\n            trashDiv.className = \"trash-icon\";\n            trashDiv.innerHTML = '🗑️';\n            trashDiv.addEventListener(\"click\", ev => {\n              ev.stopPropagation();\n              anvil.call(ev.currentTarget, \"delete_report\", report.report_rich, window.activeSubTab);\n            });\n            entryDiv.addEventListener(\"click\", () => anvil.call(entryDiv, \"open_report_editor\", report));\n            entryDiv.appendChild(patientNameDiv);\n            if (window.isSupervisor && window.activeSubTab === 'structure_reports') entryDiv.appendChild(vetNameDiv);\n            entryDiv.appendChild(dateDiv);\n            entryDiv.appendChild(statusDiv);\n            entryDiv.appendChild(trashDiv);\n            return entryDiv;\n          };\n\n          window.populateMyReports = function(reports) {\n            const container = document.getElementById(\"myReportsContainer\");\n            if (!container) return;\n            container.innerHTML = \"\";\n            if (!reports || reports.length === 0) {\n              container.innerHTML = \"<div style='text-align: center; color: #888;'>Aucun rapport personnel à afficher.</div>\";\n              return;\n            }\n            reports.sort((a,b) => parseDateTime(b.last_modified) - parseDateTime(a.last_modified));\n            reports.forEach(report => container.appendChild(createReportElement(report)));\n          };\n\n          window.populateStructureReports = function(reports) {\n            const container = document.getElementById(\"structureReportsContainer\");\n            if (!container) return;\n            container.innerHTML = \"\";\n            if (!reports || reports.length === 0) {\n              container.innerHTML = \"<div style='text-align: center; color: #888;'>Aucun rapport de structure à afficher.</div>\";\n              return;\n            }\n            reports.sort((a,b) => parseDateTime(b.last_modified) - parseDateTime(a.last_modified));\n            reports.forEach(report => container.appendChild(createReportElement(report)));\n          };\n\n          function renderVetCheckboxes() {\n            const vetList = document.getElementById(\"vetList\");\n            if (!vetList) return;\n            vetList.innerHTML = \"\";\n            window.__affiliated_vets.forEach(vet => {\n              const itemDiv = document.createElement(\"div\");\n              itemDiv.className = \"vet-item\";\n              itemDiv.innerHTML = `<input type=\\\"checkbox\\\" value=\\\"${vet.email}\\\" id=\\\"vet_${vet.email}\\\"><label for=\\\"vet_${vet.email}\\\">${vet.name}</label>`;\n              vetList.appendChild(itemDiv);\n            });\n          }\n\n          function formatLastModified(dateStr) {\n            if (!dateStr) return \"(N/A)\";\n            const date = new Date(dateStr.replace(' ', 'T'));\n            if (isNaN(date)) return dateStr;\n            const monthNames = [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"];\n            return `${date.getDate()} ${monthNames[date.getMonth()] || ''}`.trim();\n          }\n\n          function parseDateTime(dateStr) {\n            if (!dateStr) return 0;\n            const date = new Date(dateStr.replace(' ', 'T'));\n            return isNaN(date) ? 0 : date.getTime();\n          }\n        }\n\n        window.reAttachArchivesEvents = function() {\n\n          const reattachListener = (selector, event, handler) => {\n            const element = document.querySelector(selector);\n            if (element) {\n              const newElement = element.cloneNode(true);\n              element.parentNode.replaceChild(newElement, element);\n              newElement.addEventListener(event, handler);\n            }\n          };\n\n          const reattachListenersToAll = (selector, event, handler) => {\n            document.querySelectorAll(selector).forEach(element => {\n              const newElement = element.cloneNode(true);\n              element.parentNode.replaceChild(newElement, element);\n              newElement.addEventListener(event, handler);\n            });\n          };\n\n          reattachListener('#createBtn', 'click', (event) => anvil.call(event.currentTarget, 'create_new_report'));\n\n          // *** FIX: Pass the currently active tab to the Python refresh function ***\n          reattachListenersToAll('.refresh-button', 'click', (event) => {\n            anvil.call(event.currentTarget, 'refresh_data_click', window.activeSubTab);\n          });\n\n          reattachListenersToAll('.sub-tab', 'click', (event) => {\n            const tab = event.currentTarget;\n            document.querySelector('.sub-tab.active')?.classList.remove('active');\n            tab.classList.add('active');\n            window.activeSubTab = tab.dataset.tab;\n            document.querySelectorAll('.report-panel').forEach(panel => panel.classList.remove('active'));\n            document.getElementById(window.activeSubTab === 'my_reports' ? 'myReportsPanel' : 'structureReportsPanel').classList.add('active');\n            anvil.call(tab, 'apply_filters', window.activeSubTab);\n          });\n\n          reattachListener('.search-bar', 'input', (event) => {\n            anvil.call(event.currentTarget, 'search_reports', event.target.value, window.activeSubTab);\n          });\n\n          reattachListenersToAll('.status-option', 'click', (event) => {\n            event.preventDefault();\n            const option = event.currentTarget;\n            document.querySelector('.status-option.active')?.classList.remove('active');\n            option.classList.add('active');\n            anvil.call(option, 'filter_reports_by_status', option.dataset.filter, window.activeSubTab);\n          });\n\n          reattachListener('#vetFilterBtn', 'click', () => { document.getElementById('vetModal').style.display = \"block\"; });\n          reattachListener('#vetModalRetourBtn', 'click', () => { document.getElementById('vetModal').style.display = \"none\"; });\n          reattachListener('#vetModalApplyBtn', 'click', (event) => {\n            const checkedVetEmails = Array.from(document.querySelectorAll('#vetList input:checked')).map(cb => cb.value);\n            anvil.call(event.currentTarget, 'filter_reports_by_vets', checkedVetEmails);\n            document.getElementById('vetModal').style.display = \"none\";\n          });\n        };\n      </script>\n  </body>\n</html>"
  type: HtmlTemplate
is_package: true
