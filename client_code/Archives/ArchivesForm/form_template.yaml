components:
- layout_properties: {slot: time_display_slot}
  name: time_display_1
  properties: {}
  type: form:Components.TimeDisplay
- layout_properties: {slot: default}
  name: header_nav_1
  properties: {active_tab: Archives}
  type: form:Components.HeaderNav
container:
  properties:
    html: "<!DOCTYPE html>\n<html lang=\"fr\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <!-- The entire <style> block has been removed and is now in theme.css -->\n  </head>\n  <body>\n    <!-- The new scoping class is added here -->\n    <div class=\"responsive-container archives-form-component\">\n      <div class=\"fixed-section\">\n        <div anvil-slot=\"default\"></div>\n        <div class=\"actions-row\">\n          <button class=\"create-button\" id=\"archivesForm-button-create\">+ Créer</button>\n          <div anvil-slot=\"time_display_slot\"></div>\n        </div>\n        <input type=\"text\" class=\"search-bar\" id=\"archivesForm-input-search\" placeholder=\"Rechercher dans les rapports...\">\n        <div class=\"supervisor-tabs\" id=\"supervisorTabs\">\n          <div class=\"sub-tab active\" data-tab=\"my_reports\" id=\"archivesForm-tab-myReports\">Mes Rapports</div>\n          <div class=\"sub-tab\" data-tab=\"structure_reports\" id=\"archivesForm-tab-structureReports\">Ma Structure</div>\n        </div>\n      </div>\n      <div class=\"content-area\">\n        <div id=\"archives-spinner-overlay\"><div class=\"spinner\"></div></div>\n        <div class=\"report-panel active\" id=\"myReportsPanel\">\n          <div class=\"section-header\">\n            <h2 class=\"section-title\" id=\"archivesForm-h2-myReportsTitle\">Mes Rapports</h2>\n            <div class=\"section-controls\">\n              <button class=\"filter-button\" id=\"archivesForm-button-myReportsFilter\">Filtrer</button>\n            </div>\n          </div>\n          <div id=\"myReportsContainer\"></div>\n        </div>\n        <div class=\"report-panel\" id=\"structureReportsPanel\">\n          <div class=\"section-header\">\n            <h2 class=\"section-title\" id=\"archivesForm-h2-structureTitle\">Ma Structure</h2>\n            <div class=\"section-controls\">\n              <button class=\"refresh-button\" id=\"archivesForm-button-refresh\" title=\"Rafraîchir\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20px\" viewBox=\"0 0 24 24\" width=\"20px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/></svg></button>\n              <button class=\"filter-button\" id=\"archivesForm-button-structureFilter\">Filtrer</button>\n            </div>\n          </div>\n          <div id=\"structureReportsContainer\"></div>\n        </div>\n      </div>\n      <div class=\"modal filter-modal\" id=\"myReportsFilterModal\">\n        <div class=\"modal-content\">\n          <h3 id=\"archivesForm-h3-myReportsFilterTitle\">Filtrer Mes Rapports</h3>\n          <div class=\"filter-group\">\n            <h4 id=\"archivesForm-h4-myReportsStatus\">Par Statut</h4>\n            <div class=\"filter-list\" id=\"myReportsStatusList\"></div>\n          </div>\n          <div class=\"filter-group\">\n            <h4 id=\"archivesForm-h4-myReportsPatient\">Par Patient</h4>\n            <div class=\"filter-list\" id=\"myReportsPatientList\"></div>\n          </div>\n          <div class=\"modal-actions\">\n            <button class=\"custom-button btn-default close-modal-btn\" id=\"archivesForm-button-myReportsReturn\">Retour</button>\n            <button class=\"custom-button btn-primary\" id=\"archivesForm-button-myReportsApply\">Appliquer</button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal filter-modal\" id=\"structureFilterModal\">\n        <div class=\"modal-content\">\n          <h3 id=\"archivesForm-h3-structureFilterTitle\">Filtrer Ma Structure</h3>\n          <div class=\"filter-group\">\n            <h4 id=\"archivesForm-h4-structureStatus\">Par Statut</h4>\n            <div class=\"filter-list\" id=\"structureStatusList\"></div>\n          </div>\n          <div class=\"filter-group\">\n            <h4 id=\"archivesForm-h4-structureVet\">Par Vétérinaire</h4>\n            <div class=\"filter-list\" id=\"structureVetList\"></div>\n          </div>\n          <div class=\"modal-actions\">\n            <button class=\"custom-button btn-default close-modal-btn\" id=\"archivesForm-button-structureReturn\">Retour</button>\n            <button class=\"custom-button btn-primary\" id=\"archivesForm-button-structureApply\">Appliquer</button>\n          </div>\n        </div>\n      </div>\n\n      <script>\n        if (!window.archives_globals) {\n          window.archives_globals = true;\n          const logger = window.createLogger('ArchivesForm');\n\n          window.archives_isSupervisor = false;\n          window.archives_hasStructure = false;\n          window.archives_activeSubTab = 'my_reports';\n          window.archives_localeTexts = {\n            monthNames: [\"jan.\", \"feb.\", \"mar.\", \"apr.\", \"may\", \"jun.\", \"jul.\", \"aug.\", \"sep.\", \"oct.\", \"nov.\", \"dec.\"],\n            notAvailable: \"(N/A)\", noPatient: \"(No patient)\", unknownVet: \"(Unknown)\",\n            notSpecified: \"(Not specified)\", noMyReports: \"No personal reports to display.\",\n            noStructureReports: \"No structure reports to display.\"\n          };\n\n          window.showArchivesSpinner = function() {\n            const overlay = document.getElementById('archives-spinner-overlay');\n            if (overlay) overlay.style.display = 'flex';\n          };\n          window.hideArchivesSpinner = function() {\n            const overlay = document.getElementById('archives-spinner-overlay');\n            if (overlay) overlay.style.display = 'none';\n          };\n          window.setLocaleTexts = function(texts) {\n            logger.log('Setting locale texts from Python.');\n            window.archives_localeTexts = { ...window.archives_localeTexts, ...texts };\n          };\n          window.resetActiveTabState = function() {\n            window.archives_activeSubTab = 'my_reports';\n            document.querySelectorAll('.sub-tab').forEach(tab => tab.classList.remove('active'));\n            document.querySelector('.sub-tab[data-tab=\"my_reports\"]')?.classList.add('active');\n            document.querySelectorAll('.report-panel').forEach(panel => panel.classList.remove('active'));\n            document.getElementById('myReportsPanel')?.classList.add('active');\n          };\n          window.setupUI = function(isSupervisor, hasStructure, vetList, structureName, statusOptions, patientOptions) {\n            logger.log('Setting up UI.');\n            window.archives_isSupervisor = isSupervisor;\n            window.archives_hasStructure = hasStructure;\n\n            const supervisorTabs = document.getElementById('supervisorTabs');\n            if (supervisorTabs) {\n              supervisorTabs.style.display = (isSupervisor && hasStructure) ? 'flex' : 'none';\n            } else {\n              logger.error(\"setupUI: Could not find the 'supervisorTabs' element in the DOM.\");\n            }\n\n            populateFilterModals(vetList || [], statusOptions || [], patientOptions || []);\n          };\n          function populateFilterModals(vets, statuses, patients) {\n            const createCheckboxItem = (value, text, groupName) => {\n              const label = document.createElement('label');\n              label.className = 'filter-item';\n              label.innerHTML = `<input type=\"checkbox\" value=\"${value}\" name=\"${groupName}\"> ${text}`;\n              return label;\n            };\n            const structureVetList = document.getElementById('structureVetList');\n            const structureStatusList = document.getElementById('structureStatusList');\n            if (structureVetList) {\n              structureVetList.innerHTML = '';\n              vets.forEach(vet => structureVetList.appendChild(createCheckboxItem(vet.email, vet.name, 'vet-filter')));\n            }\n            if(structureStatusList) {\n              structureStatusList.innerHTML = '';\n              statuses.forEach(s => structureStatusList.appendChild(createCheckboxItem(s.key, s.display, 'struct-status-filter')));\n            }\n            const myReportsStatusList = document.getElementById('myReportsStatusList');\n            const myReportsPatientList = document.getElementById('myReportsPatientList');\n            if (myReportsStatusList) {\n              myReportsStatusList.innerHTML = '';\n              statuses.forEach(s => myReportsStatusList.appendChild(createCheckboxItem(s.key, s.display, 'my-status-filter')));\n            }\n            if (myReportsPatientList) {\n              myReportsPatientList.innerHTML = '';\n              patients.forEach(p => myReportsPatientList.appendChild(createCheckboxItem(p.id, p.name, 'patient-filter')));\n            }\n          }\n          const createReportElement = (report) => {\n            const entryDiv = document.createElement(\"div\");\n            entryDiv.className = \"record-entry\";\n            const patientNameDiv = document.createElement(\"div\");\n            patientNameDiv.className = \"record-subcase\";\n            patientNameDiv.textContent = report.name || window.archives_localeTexts.noPatient;\n            const vetNameDiv = document.createElement(\"div\");\n            if (window.archives_isSupervisor && window.archives_activeSubTab === 'structure_reports') {\n              vetNameDiv.className = \"record-subcase\";\n              vetNameDiv.textContent = report.vet_display_name || window.archives_localeTexts.unknownVet;\n            }\n            const dateDiv = document.createElement(\"div\");\n            dateDiv.className = \"record-subcase\";\n            dateDiv.textContent = formatDate(report.last_updated_at);\n            const statusDiv = document.createElement(\"div\");\n            statusDiv.className = \"record-subcase\";\n            statusDiv.textContent = report.statut_display || window.archives_localeTexts.notSpecified;\n            const trashDiv = document.createElement(\"div\");\n            trashDiv.className = \"trash-icon\";\n            trashDiv.innerHTML = '🗑️'; \n            trashDiv.addEventListener(\"click\", ev => {\n              ev.stopPropagation();\n              anvil.call(ev.currentTarget, \"delete_report\", report.id, window.archives_activeSubTab);\n            });\n            entryDiv.addEventListener(\"click\", () => anvil.call(entryDiv, \"open_report_editor\", report));\n            entryDiv.appendChild(patientNameDiv);\n            if (window.archives_isSupervisor && window.archives_activeSubTab === 'structure_reports') entryDiv.appendChild(vetNameDiv);\n            entryDiv.appendChild(dateDiv);\n            entryDiv.appendChild(statusDiv);\n            entryDiv.appendChild(trashDiv);\n            return entryDiv;\n          };\n          window.populateMyReports = function(reports) {\n            const container = document.getElementById(\"myReportsContainer\");\n            if (!container) return;\n            container.innerHTML = !reports || reports.length === 0 ? `<div style='text-align: center; color: #888;'>${window.archives_localeTexts.noMyReports}</div>` : \"\";\n            if(reports && reports.length > 0) {\n              reports.sort((a,b) => parseDateTime(b.last_updated_at) - parseDateTime(a.last_updated_at));\n              reports.forEach(report => container.appendChild(createReportElement(report)));\n            }\n          };\n          window.populateStructureReports = function(reports) {\n            const container = document.getElementById(\"structureReportsContainer\");\n            if (!container) return;\n            container.innerHTML = !reports || reports.length === 0 ? `<div style='text-align: center; color: #888;'>${window.archives_localeTexts.noStructureReports}</div>` : \"\";\n            if(reports && reports.length > 0) {\n              reports.sort((a,b) => parseDateTime(b.last_updated_at) - parseDateTime(a.last_updated_at));\n              reports.forEach(report => container.appendChild(createReportElement(report)));\n            }\n          };\n          function formatDate(dateStr) {\n            if (!dateStr) return window.archives_localeTexts.notAvailable;\n            const date = new Date(dateStr.replace(' ', 'T'));\n            if (isNaN(date)) return dateStr;\n            return `${date.getDate()} ${window.archives_localeTexts.monthNames[date.getMonth()] || ''}`.trim();\n          }\n          function parseDateTime(dateStr) {\n            if (!dateStr) return 0;\n            const date = new Date(dateStr.replace(' ', 'T'));\n            return isNaN(date) ? 0 : date.getTime();\n          }\n          window.reAttachArchivesEvents = function() {\n            logger.log('Re-attaching archives event listeners.');\n            const reattachListener = (selector, event, handler) => {\n              const element = document.querySelector(selector);\n              if (element) {\n                const newElement = element.cloneNode(true);\n                element.parentNode.replaceChild(newElement, element);\n                newElement.addEventListener(event, handler);\n              }\n            };\n            reattachListener('#archivesForm-button-create', 'click', (event) => anvil.call(event.currentTarget, 'create_new_report'));\n            reattachListener('#archivesForm-button-refresh', 'click', (event) => {\n              anvil.call(event.currentTarget, 'refresh_data_click', window.archives_activeSubTab);\n            });\n            document.querySelectorAll('.sub-tab').forEach(element => {\n              const newElement = element.cloneNode(true);\n              element.parentNode.replaceChild(newElement, element);\n              newElement.addEventListener('click', (event) => {\n                const tab = event.currentTarget;\n                document.querySelector('.sub-tab.active')?.classList.remove('active');\n                tab.classList.add('active');\n                window.archives_activeSubTab = tab.dataset.tab;\n                document.querySelectorAll('.report-panel').forEach(panel => panel.classList.remove('active'));\n                document.getElementById(window.archives_activeSubTab === 'my_reports' ? 'myReportsPanel' : 'structureReportsPanel').classList.add('active');\n                anvil.call(tab, 'apply_filters', window.archives_activeSubTab);\n              });\n            });\n            reattachListener('#archivesForm-input-search', 'input', (event) => {\n              anvil.call(event.currentTarget, 'search_reports', event.target.value, window.archives_activeSubTab);\n            });\n            reattachListener('#archivesForm-button-myReportsFilter', 'click', () => window.openModal('myReportsFilterModal'));\n            reattachListener('#archivesForm-button-structureFilter', 'click', () => window.openModal('structureFilterModal'));\n            document.querySelectorAll('.close-modal-btn').forEach(element => {\n              const newElement = element.cloneNode(true);\n              element.parentNode.replaceChild(newElement, element);\n              newElement.addEventListener('click', (event) => {\n                window.closeModal(event.target.closest('.modal').id);\n              });\n            });\n            reattachListener('#archivesForm-button-myReportsApply', 'click', (event) => {\n              const checkedStatuses = Array.from(document.querySelectorAll('#myReportsStatusList input:checked')).map(cb => cb.value);\n              const checkedPatients = Array.from(document.querySelectorAll('#myReportsPatientList input:checked')).map(cb => cb.value);\n              anvil.call(event.currentTarget, 'apply_my_reports_filters', checkedStatuses, checkedPatients);\n              window.closeModal('myReportsFilterModal');\n            });\n            reattachListener('#archivesForm-button-structureApply', 'click', (event) => {\n              const checkedStatuses = Array.from(document.querySelectorAll('#structureStatusList input:checked')).map(cb => cb.value);\n              const checkedVets = Array.from(document.querySelectorAll('#structureVetList input:checked')).map(cb => cb.value);\n              anvil.call(event.currentTarget, 'apply_structure_filters', checkedStatuses, checkedVets);\n              window.closeModal('structureFilterModal');\n            });\n          };\n        }\n      </script>\n  </body>\n</html>"
    role: null
  type: HtmlTemplate
is_package: true
