components:
- layout_properties: {slot: time_display_slot}
  name: time_display_1
  properties: {}
  type: form:Components.TimeDisplay
- layout_properties: {slot: default}
  name: header_nav_1
  properties: {active_tab: Archives}
  type: form:Components.HeaderNav
container:
  properties:
    html: "<!DOCTYPE html>\n<html lang=\"fr\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n      /* Base Styles, Resets, and Container */\n      * { box-sizing: border-box; font-family: Arial, sans-serif; margin: 0; padding: 0; }\n      body { background-color: #f5f5f5; height: 100vh; overflow: hidden; }\n      .container { display: flex; flex-direction: column; height: 100vh; max-width: 800px; margin: 0 auto; background-color: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\n      .fixed-section { background: white; z-index: 10; }\n\n      /* --- MODIFICATION 1: CSS Changes --- */\n      /* Action Bar and Controls */\n      .actions-row { \n        display: flex; \n        align-items: center; \n        padding: 15px 20px; \n        flex-wrap: wrap; \n      }\n      .actions-row .status-nav {\n        margin: 0 auto;\n      }\n      .create-button { padding: 8px 16px; background: #fff; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; }\n      .search-bar { width: calc(100% - 40px); padding: 8px; border: 1px solid #ddd; border-radius: 4px; margin: 0 20px 15px 20px; }\n      .supervisor-tabs { display: none; border-bottom: 1px solid #ddd; }\n      .sub-tab { flex: 1; text-align: center; padding: 12px; cursor: pointer; background: #f8f8f8; border-right: 1px solid #ddd; }\n      .sub-tab:last-child { border-right: none; }\n      .sub-tab.active { background: #fff; font-weight: bold; border-bottom: 2px solid #1a73e8; color: #1a73e8; }\n\n      /* Report List and Items */\n      .content-area { flex: 1; overflow-y: auto; }\n      .report-panel { display: none; padding: 20px; }\n      .report-panel.active { display: block; }\n\n      /* Section Header styles for alignment */\n      .section-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 20px;\n        border-bottom: 1px solid #eee;\n        padding-bottom: 15px;\n      }\n      .section-title {\n        font-size: 20px;\n        color: #333;\n        margin: 0;\n      }\n      .structure-controls { padding-bottom: 0; }\n\n      .record-entry { display: flex; align-items: center; justify-content: space-between; border: 1px solid #ddd; border-radius: 4px; padding: 10px; margin-bottom: 10px; background: #fff; cursor: pointer; }\n      .record-subcase { flex: 1; padding: 0 10px; text-align: left; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; }\n      .trash-icon svg { width: 18px; height: 18px; fill: #888; transition: fill 0.2s; }\n      .trash-icon:hover svg { fill: #c00; }\n\n      /* Status filter bar styles */\n      .status-nav { display: flex; border: 1px solid #ddd; border-radius: 4px; overflow: hidden; }\n      .status-option { display: flex; align-items: center; padding: 8px 16px; gap: 8px; color: #333; cursor: pointer; text-decoration: none; background-color: #f8f8f8; border-right: 1px solid #ddd; }\n      .status-option:last-child { border-right: none; }\n      .status-option.active { background-color: #fff; color: #1a73e8; font-weight: bold; box-shadow: inset 0 -2px 0 #1a73e8; }\n      .icon { width: 18px; height: 18px; display: inline-flex; align-items: center; justify-content: center; }\n\n      /* MODIFICATION: Vet Modal Styles */\n      .vet-modal { display: none; position: fixed; z-index: 999; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); }\n      .modal-content { background-color: #fff; width: 300px; margin: 100px auto; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.3); position: relative; }\n      .modal-content h3 { margin-bottom: 15px; }\n      .vet-list { max-height: 200px; overflow-y: auto; margin-bottom: 15px; }\n      .vet-item { display: flex; align-items: center; margin-bottom: 8px; }\n      .vet-item label { margin-left: 8px; }\n      .modal-actions { display: flex; justify-content: flex-end; gap: 10px; }\n      .modal-actions button { padding: 6px 12px; border: 1px solid #ccc; background: #f8f8f8; border-radius: 4px; cursor: pointer; }\n      .vet-filter-button { padding: 8px 16px; background: #fff; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"fixed-section\">\n        <div anvil-slot=\"default\"></div>\n        <!-- MODIFICATION: The <div class=\"left-section\"> has been removed. -->\n        <!-- The button, nav, and time slot are now direct children of .actions-row. -->\n        <div class=\"actions-row\">\n          <button class=\"create-button\" id=\"createBtn\">+ Cr√©er</button>\n          <nav class=\"status-nav\">\n            <a href=\"#\" class=\"status-option active\" data-filter=\"all\"><span class=\"icon\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"/></svg></span>Afficher tout</a>\n            <a href=\"#\" class=\"status-option\" data-filter=\"pending_correction\"><span class=\"icon\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/></svg></span>A corriger</a>\n            <a href=\"#\" class=\"status-option\" data-filter=\"validated\"><span class=\"icon\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"/></svg></span>Valid√©</a>\n            <a href=\"#\" class=\"status-option\" data-filter=\"sent\"><span class=\"icon\"><svg viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/></svg></span>Envoy√©</a>\n          </nav>\n          <div anvil-slot=\"time_display_slot\"></div>\n        </div>\n\n      <div class=\"supervisor-tabs\" id=\"supervisorTabs\">\n        <div class=\"sub-tab active\" data-tab=\"my_reports\">Mes Rapports</div>\n        <div class=\"sub-tab\" data-tab=\"structure_reports\">Ma Structure</div>\n      </div>\n\n      <div class=\"content-area\">\n        <div class=\"report-panel active\" id=\"myReportsPanel\">\n          <h2 class=\"section-title\" style=\"border-bottom: 1px solid #eee; padding-bottom: 15px; margin-bottom: 20px;\">Mes Rapports</h2>\n          <div id=\"myReportsContainer\"></div>\n        </div>\n\n        <div class=\"report-panel\" id=\"structureReportsPanel\">\n          <div class=\"section-header\">\n            <h2 class=\"section-title\">Ma Structure</h2>\n            <div class=\"structure-controls\">\n              <button class=\"vet-filter-button\" id=\"vetFilterBtn\">Filtrer par V√©t√©rinaire</button>\n            </div>\n          </div>\n          <div id=\"structureReportsContainer\"></div>\n        </div>\n      </div>\n    </div>\n\n    <!-- MODIFICATION: Vet Modal with full content -->\n    <div class=\"vet-modal\" id=\"vetModal\">\n      <div class=\"modal-content\">\n        <h3>Trier par v√©t√©rinaire</h3>\n        <div class=\"vet-list\" id=\"vetList\">\n          <!-- Vet checkboxes will be rendered here by JS -->\n        </div>\n        <div class=\"modal-actions\">\n          <button id=\"vetModalRetourBtn\">Retour</button>\n          <button id=\"vetModalApplyBtn\">Appliquer</button>\n        </div>\n      </div>\n    </div>\n\n    <script>\n      if (!window.__archives_form_globals) {\n        window.__archives_form_globals = true;\n\n        window.isSupervisor = false;\n        window.hasStructure = false;\n        window.activeSubTab = 'my_reports';\n        window.__affiliated_vets = [];\n\n        window.setupUI = function(isSupervisor, hasStructure, vetList, structureName) {\n          window.isSupervisor = isSupervisor;\n          window.hasStructure = hasStructure;\n          const supervisorTabs = document.getElementById('supervisorTabs');\n          supervisorTabs.style.display = (isSupervisor && hasStructure) ? 'flex' : 'none';\n          document.getElementById('myReportsPanel').classList.add('active');\n          if (isSupervisor && hasStructure) {\n            window.__affiliated_vets = vetList || [];\n            renderVetCheckboxes();\n          }\n        };\n\n        const createReportElement = (report) => {\n          const entryDiv = document.createElement(\"div\");\n          entryDiv.className = \"record-entry\";\n          const patientNameDiv = document.createElement(\"div\");\n          patientNameDiv.className = \"record-subcase\";\n          patientNameDiv.textContent = report.name || \"(Aucun patient)\";\n\n          const vetNameDiv = document.createElement(\"div\");\n          if (window.isSupervisor && window.activeSubTab === 'structure_reports') {\n            vetNameDiv.className = \"record-subcase\";\n            vetNameDiv.textContent = report.vet_display_name || \"(Inconnu)\";\n          }\n\n          const dateDiv = document.createElement(\"div\");\n          dateDiv.className = \"record-subcase\";\n          dateDiv.textContent = formatLastModified(report.last_modified);\n\n          const statusDiv = document.createElement(\"div\");\n          statusDiv.className = \"record-subcase\";\n          statusDiv.textContent = report.statut || \"(Non sp√©cifi√©)\";\n\n          const trashDiv = document.createElement(\"div\");\n          trashDiv.className = \"trash-icon\";\n          trashDiv.innerHTML = 'üóëÔ∏è';\n          trashDiv.addEventListener(\"click\", ev => {\n            ev.stopPropagation();\n            anvil.call(ev.currentTarget, \"delete_report\", report.report_rich, window.activeSubTab);\n          });\n\n          entryDiv.addEventListener(\"click\", () => {\n            anvil.call(entryDiv, \"open_report_editor\", report);\n          });\n\n          entryDiv.appendChild(patientNameDiv);\n          if (window.isSupervisor && window.activeSubTab === 'structure_reports') {\n            entryDiv.appendChild(vetNameDiv);\n          }\n          entryDiv.appendChild(dateDiv);\n          entryDiv.appendChild(statusDiv);\n          entryDiv.appendChild(trashDiv);\n          return entryDiv;\n        };\n\n        window.populateMyReports = function(reports) {\n          const container = document.getElementById(\"myReportsContainer\");\n          container.innerHTML = \"\";\n          if (!reports || reports.length === 0) {\n            container.innerHTML = \"<div style='text-align: center; color: #888;'>Aucun rapport personnel √† afficher.</div>\";\n            return;\n          }\n          reports.sort((a,b) => parseDateTime(b.last_modified) - parseDateTime(a.last_modified));\n          reports.forEach(report => container.appendChild(createReportElement(report)));\n        };\n\n        window.populateStructureReports = function(reports) {\n          const container = document.getElementById(\"structureReportsContainer\");\n          container.innerHTML = \"\";\n          if (!reports || reports.length === 0) {\n            container.innerHTML = \"<div style='text-align: center; color: #888;'>Aucun rapport de structure √† afficher.</div>\";\n            return;\n          }\n          reports.sort((a,b) => parseDateTime(b.last_modified) - parseDateTime(a.last_modified));\n          reports.forEach(report => container.appendChild(createReportElement(report)));\n        };\n\n        function renderVetCheckboxes() {\n          const vetList = document.getElementById(\"vetList\");\n          if (!vetList) return;\n          vetList.innerHTML = \"\";\n          window.__affiliated_vets.forEach(vet => {\n            const itemDiv = document.createElement(\"div\");\n            itemDiv.className = \"vet-item\";\n            itemDiv.innerHTML = `<input type=\"checkbox\" value=\"${vet.email}\" id=\"vet_${vet.email}\"><label for=\"vet_${vet.email}\">${vet.name}</label>`;\n            vetList.appendChild(itemDiv);\n          });\n        }\n\n        function formatLastModified(dateStr) {\n          if (!dateStr) return \"(N/A)\";\n          const date = new Date(dateStr.replace(' ', 'T'));\n          if (isNaN(date)) return dateStr;\n          const monthNames = [\"janv.\", \"f√©vr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"ao√ªt\", \"sept.\", \"oct.\", \"nov.\", \"d√©c.\"];\n          return `${date.getDate()} ${monthNames[date.getMonth()] || ''}`.trim();\n        }\n\n        function parseDateTime(dateStr) {\n          if (!dateStr) return 0;\n          const date = new Date(dateStr.replace(' ', 'T'));\n          return isNaN(date) ? 0 : date.getTime();\n        }\n\n        (function attachArchivesEvents() {\n          const stableAnchor = document.querySelector('.container');\n          document.getElementById('createBtn').addEventListener('click', (event) => anvil.call(event.currentTarget, 'create_new_report'));\n\n          document.querySelectorAll('.sub-tab').forEach(tab => {\n            tab.addEventListener('click', () => {\n              document.querySelector('.sub-tab.active')?.classList.remove('active');\n              tab.classList.add('active');\n              window.activeSubTab = tab.dataset.tab;\n              document.querySelectorAll('.report-panel').forEach(panel => panel.classList.remove('active'));\n              document.getElementById(window.activeSubTab === 'my_reports' ? 'myReportsPanel' : 'structureReportsPanel').classList.add('active');\n              anvil.call(stableAnchor, 'apply_filters', window.activeSubTab);\n            });\n          });\n\n          document.querySelector('.search-bar').addEventListener('input', (event) => {\n            anvil.call(event.currentTarget, 'search_reports', event.target.value, window.activeSubTab);\n          });\n\n          document.querySelectorAll('.status-option').forEach(option => {\n            option.addEventListener('click', (event) => {\n              event.preventDefault();\n              document.querySelector('.status-option.active')?.classList.remove('active');\n              option.classList.add('active');\n              anvil.call(event.currentTarget, 'filter_reports_by_status', option.dataset.filter, window.activeSubTab);\n            });\n          });\n\n          // Modal event listeners\n          const vetFilterBtn = document.getElementById('vetFilterBtn');\n          const vetModal = document.getElementById('vetModal');\n          if(vetFilterBtn && vetModal) {\n            vetFilterBtn.addEventListener('click', () => { vetModal.style.display = \"block\"; });\n            document.getElementById('vetModalRetourBtn').addEventListener('click', () => { vetModal.style.display = \"none\"; });\n            document.getElementById('vetModalApplyBtn').addEventListener('click', (event) => {\n              const checkedVetEmails = Array.from(document.querySelectorAll('#vetList input:checked')).map(cb => cb.value);\n              anvil.call(event.currentTarget, 'filter_reports_by_vets', checkedVetEmails);\n              vetModal.style.display = \"none\";\n            });\n          }\n        })();\n      }\n    </script>\n  </body>\n</html>"
  type: HtmlTemplate
is_package: true
