components:
- layout_properties: {slot: time_display_slot}
  name: time_display_1
  properties: {}
  type: form:Components.TimeDisplay
- layout_properties: {slot: default}
  name: header_nav_1
  properties: {active_tab: Archives}
  type: form:Components.HeaderNav
container:
  properties:
    html: "<!DOCTYPE html>\n<html lang=\"fr\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n      /* Base Styles, Resets, and Container */\n      * { box-sizing: border-box; font-family: Arial, sans-serif; margin: 0; padding: 0; }\n      body { background-color: #f5f5f5; height: 100vh; overflow: hidden; }\n      .fixed-section { background: white; z-index: 10; }\n\n      /* Action Bar and Controls */\n      .actions-row { \n        display: flex; \n        align-items: center; \n        padding: 15px 20px; \n        flex-wrap: wrap;\n      }\n      .actions-row > [anvil-slot=\"time_display_slot\"] {\n        margin-left: auto; /* Pushes the time display to the far right */\n      }\n      .create-button { padding: 8px 16px; background: #fff; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; }\n      .refresh-button { padding: 6px 6px 1px 6px; background: #fff; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; } \n      .search-bar { width: calc(100% - 40px); padding: 8px; border: 1px solid #ddd; border-radius: 4px; margin: 0 20px 15px 20px; }\n\n      /* Supervisor Tabs */\n      .supervisor-tabs { display: none; border-bottom: 1px solid #ddd; }\n      .sub-tab { flex: 1; text-align: center; padding: 12px; cursor: pointer; background: #f8f8f8; border-right: 1px solid #ddd; }\n      .sub-tab:last-child { border-right: none; }\n      .sub-tab.active { background: #fff; font-weight: bold; border-bottom: 2px solid #1a73e8; color: #1a73e8; }\n\n      /* Report List and Items */\n      .content-area { flex: 1; overflow-y: auto; }\n      .report-panel { display: none; padding: 20px; }\n      .report-panel.active { display: block; }\n\n      /* Section Header styles for alignment */\n      .section-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 20px;\n        border-bottom: 1px solid #eee;\n        padding-bottom: 15px;\n      }\n      .section-title { font-size: 20px; color: #333; margin: 0; }\n      .section-controls { display: flex; gap: 10px; align-items: center; }\n      .filter-button { padding: 8px 16px; background: #fff; border: 1px solid #ddd; border-radius: 4px; cursor: pointer; }\n\n      .record-entry { \n        display: flex; \n        align-items: center; \n        justify-content: space-between; \n        border: 1px solid #ddd; \n        border-radius: 4px; \n        padding: 10px; \n        margin-bottom: 10px; \n        background: #fff; \n        cursor: pointer; \n        transition: background-color 0.2s;\n      }\n      .record-entry:hover { background-color: #f5f5f5; }\n      .record-subcase { flex: 1; padding: 0 10px; text-align: left; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; }\n      .trash-icon svg { width: 18px; height: 18px; fill: #888; transition: fill 0.2s; }\n      .trash-icon:hover svg { fill: #c00; }\n\n      /* --- Filter Modal Styles --- */\n      .filter-modal { display: none; position: fixed; z-index: 999; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); }\n      .modal-content { background-color: #fff; width: 90%; max-width: 500px; margin: 100px auto; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.3); position: relative; }\n      .modal-content h3 { margin-bottom: 20px; }\n      .filter-group { margin-bottom: 20px; }\n      .filter-group h4 { font-size: 16px; color: #555; margin-bottom: 10px; border-bottom: 1px solid #eee; padding-bottom: 5px; }\n      .filter-list { display: flex; flex-wrap: wrap; gap: 10px; max-height: 200px; overflow-y: auto; padding: 5px; }\n      .filter-item { display: flex; align-items: center; background-color: #f9f9f9; border: 1px solid #ddd; border-radius: 4px; padding: 8px 12px; cursor: pointer; }\n      .filter-item input { margin-right: 8px; }\n      .modal-actions { display: flex; justify-content: flex-end; gap: 10px; margin-top: 20px; border-top: 1px solid #eee; padding-top: 15px; }\n      .modal-actions button { padding: 8px 16px; border: 1px solid #ccc; background: #f8f8f8; border-radius: 4px; cursor: pointer; }\n      .modal-actions .apply-btn { background-color: #1a73e8; color: white; border-color: #1a73e8; }\n    </style>\n  </head>\n  <body>\n    <div class=\"responsive-container\">\n      <div class=\"fixed-section\">\n        <div anvil-slot=\"default\"></div>\n        <div class=\"actions-row\">\n          <button class=\"create-button\" id=\"createBtn\">+ Créer</button>\n          <div anvil-slot=\"time_display_slot\"></div>\n        </div>\n\n        <input type=\"text\" class=\"search-bar\" placeholder=\"Rechercher dans les rapports...\">\n\n        <div class=\"supervisor-tabs\" id=\"supervisorTabs\">\n          <div class=\"sub-tab active\" data-tab=\"my_reports\">Mes Rapports</div>\n          <div class=\"sub-tab\" data-tab=\"structure_reports\">Ma Structure</div>\n        </div>\n      </div>\n\n      <div class=\"content-area\">\n        <div class=\"report-panel active\" id=\"myReportsPanel\">\n          <div class=\"section-header\">\n            <h2 class=\"section-title\">Mes Rapports</h2>\n            <div class=\"section-controls\">\n              <button class=\"filter-button\" id=\"myReportsFilterBtn\">Filtrer</button>\n            </div>\n          </div>\n          <div id=\"myReportsContainer\"></div>\n        </div>\n\n        <div class=\"report-panel\" id=\"structureReportsPanel\">\n          <div class=\"section-header\">\n            <h2 class=\"section-title\">Ma Structure</h2>\n            <div class=\"section-controls\">\n              <button class=\"refresh-button\" title=\"Rafraîchir\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20px\" viewBox=\"0 0 24 24\" width=\"20px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/></svg></button>\n              <button class=\"filter-button\" id=\"structureFilterBtn\">Filtrer</button>\n            </div>\n          </div>\n          <div id=\"structureReportsContainer\"></div>\n        </div>\n      </div>\n\n      <!-- Modal for 'My Reports' Filter -->\n      <div class=\"filter-modal\" id=\"myReportsFilterModal\">\n        <div class=\"modal-content\">\n          <h3>Filtrer Mes Rapports</h3>\n          <div class=\"filter-group\">\n            <h4>Par Statut</h4>\n            <div class=\"filter-list\" id=\"myReportsStatusList\"></div>\n          </div>\n          <div class=\"filter-group\">\n            <h4>Par Patient</h4>\n            <div class=\"filter-list\" id=\"myReportsPatientList\"></div>\n          </div>\n          <div class=\"modal-actions\">\n            <button class=\"close-modal-btn\">Retour</button>\n            <button id=\"myReportsModalApplyBtn\" class=\"apply-btn\">Appliquer</button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Modal for 'Structure' Filter -->\n      <div class=\"filter-modal\" id=\"structureFilterModal\">\n        <div class=\"modal-content\">\n          <h3>Filtrer Ma Structure</h3>\n          <div class=\"filter-group\">\n            <h4>Par Statut</h4>\n            <div class=\"filter-list\" id=\"structureStatusList\"></div>\n          </div>\n          <div class=\"filter-group\">\n            <h4>Par Vétérinaire</h4>\n            <div class=\"filter-list\" id=\"structureVetList\"></div>\n          </div>\n          <div class=\"modal-actions\">\n            <button class=\"close-modal-btn\">Retour</button>\n            <button id=\"structureModalApplyBtn\" class=\"apply-btn\">Appliquer</button>\n          </div>\n        </div>\n      </div>\n\n      <script>\n        if (!window.__archives_form_globals) {\n          window.__archives_form_globals = true;\n          window.isSupervisor = false;\n          window.hasStructure = false;\n          window.activeSubTab = 'my_reports';\n\n          window.resetActiveTabState = function() {\n            window.activeSubTab = 'my_reports';\n            document.querySelectorAll('.sub-tab').forEach(tab => tab.classList.remove('active'));\n            const myReportsTab = document.querySelector('.sub-tab[data-tab=\\\"my_reports\\\"]');\n            if (myReportsTab) myReportsTab.classList.add('active');\n            document.querySelectorAll('.report-panel').forEach(panel => panel.classList.remove('active'));\n            const myReportsPanel = document.getElementById('myReportsPanel');\n            if(myReportsPanel) myReportsPanel.classList.add('active');\n          };\n\n          // setupUI now receives pre-translated status options\n          window.setupUI = function(isSupervisor, hasStructure, vetList, structureName, statusOptions, patientOptions) {\n            window.isSupervisor = isSupervisor;\n            window.hasStructure = hasStructure;\n            const supervisorTabs = document.getElementById('supervisorTabs');\n            if (supervisorTabs) supervisorTabs.style.display = (isSupervisor && hasStructure) ? 'flex' : 'none';\n\n            populateFilterModals(vetList || [], statusOptions || [], patientOptions || []);\n          };\n\n          // This function now expects statusOptions to be an array of {key, display} objects\n          function populateFilterModals(vets, statuses, patients) {\n            const createCheckboxItem = (value, text, groupName) => {\n              const label = document.createElement('label');\n              label.className = 'filter-item';\n              label.innerHTML = `<input type=\\\"checkbox\\\" value=\\\"${value}\\\" name=\\\"${groupName}\\\"> ${text}`;\n              return label;\n            };\n\n            const structureVetList = document.getElementById('structureVetList');\n            const structureStatusList = document.getElementById('structureStatusList');\n            if (structureVetList) {\n              structureVetList.innerHTML = '';\n              vets.forEach(vet => structureVetList.appendChild(createCheckboxItem(vet.email, vet.name, 'vet-filter')));\n            }\n            if(structureStatusList) {\n              structureStatusList.innerHTML = '';\n              statuses.forEach(s => structureStatusList.appendChild(createCheckboxItem(s.key, s.display, 'struct-status-filter')));\n            }\n\n            const myReportsStatusList = document.getElementById('myReportsStatusList');\n            const myReportsPatientList = document.getElementById('myReportsPatientList');\n            if (myReportsStatusList) {\n              myReportsStatusList.innerHTML = '';\n              statuses.forEach(s => myReportsStatusList.appendChild(createCheckboxItem(s.key, s.display, 'my-status-filter')));\n            }\n            if (myReportsPatientList) {\n              myReportsPatientList.innerHTML = '';\n                patients.forEach(p => myReportsPatientList.appendChild(createCheckboxItem(p.id, p.name, 'patient-filter')));\n                }\n                }\n\n                const createReportElement = (report) => {\n                const entryDiv = document.createElement(\"div\");\n                entryDiv.className = \"record-entry\";\n                const patientNameDiv = document.createElement(\"div\");\n                patientNameDiv.className = \"record-subcase\";\n                patientNameDiv.textContent = report.name || \"(Aucun patient)\";\n                const vetNameDiv = document.createElement(\"div\");\n                if (window.isSupervisor && window.activeSubTab === 'structure_reports') {\n                vetNameDiv.className = \"record-subcase\";\n                vetNameDiv.textContent = report.vet_display_name || \"(Inconnu)\";\n                }\n                const dateDiv = document.createElement(\"div\");\n                dateDiv.className = \"record-subcase\";\n                dateDiv.textContent = formatLastModified(report.last_modified);\n                const statusDiv = document.createElement(\"div\");\n                statusDiv.className = \"record-subcase\";\n                // --- CORRECTED: Use the pre-translated display text from the report object ---\n                statusDiv.textContent = report.statut_display || \"(Non spécifié)\";\n                const trashDiv = document.createElement(\"div\");\n                trashDiv.className = \"trash-icon\";\n                trashDiv.innerHTML = '🗑️';\n                trashDiv.addEventListener(\"click\", ev => {\n                ev.stopPropagation();\n                anvil.call(ev.currentTarget, \"delete_report\", report.id, window.activeSubTab);\n                });\n                entryDiv.addEventListener(\"click\", () => anvil.call(entryDiv, \"open_report_editor\", report));\n                entryDiv.appendChild(patientNameDiv);\n                if (window.isSupervisor && window.activeSubTab === 'structure_reports') entryDiv.appendChild(vetNameDiv);\n                entryDiv.appendChild(dateDiv);\n                entryDiv.appendChild(statusDiv);\n                entryDiv.appendChild(trashDiv);\n                return entryDiv;\n                };\n\n                window.populateMyReports = function(reports) {\n                const container = document.getElementById(\"myReportsContainer\");\n                if (!container) return;\n                container.innerHTML = \"\";\n                if (!reports || reports.length === 0) {\n                container.innerHTML = \"<div style='text-align: center; color: #888;'>Aucun rapport personnel à afficher.</div>\";\n                return;\n                }\n                reports.sort((a,b) => parseDateTime(b.last_modified) - parseDateTime(a.last_modified));\n                reports.forEach(report => container.appendChild(createReportElement(report)));\n                };\n\n                window.populateStructureReports = function(reports) {\n                const container = document.getElementById(\"structureReportsContainer\");\n                if (!container) return;\n                container.innerHTML = \"\";\n                if (!reports || reports.length === 0) {\n                container.innerHTML = \"<div style='text-align: center; color: #888;'>Aucun rapport de structure à afficher.</div>\";\n                return;\n                }\n                reports.sort((a,b) => parseDateTime(b.last_modified) - parseDateTime(a.last_modified));\n                reports.forEach(report => container.appendChild(createReportElement(report)));\n                };\n\n                function formatLastModified(dateStr) {\n                if (!dateStr) return \"(N/A)\";\n                const date = new Date(dateStr.replace(' ', 'T'));\n                if (isNaN(date)) return dateStr;\n                const monthNames = [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"];\n                return `${date.getDate()} ${monthNames[date.getMonth()] || ''}`.trim();\n                }\n\n                function parseDateTime(dateStr) {\n                if (!dateStr) return 0;\n                const date = new Date(dateStr.replace(' ', 'T'));\n                return isNaN(date) ? 0 : date.getTime();\n                }\n                }\n\n                window.reAttachArchivesEvents = function() {\n                const reattachListener = (selector, event, handler) => {\n                const element = document.querySelector(selector);\n                if (element) {\n                const newElement = element.cloneNode(true);\n                element.parentNode.replaceChild(newElement, element);\n                newElement.addEventListener(event, handler);\n                }\n                };\n                const reattachListenersToAll = (selector, event, handler) => {\n                document.querySelectorAll(selector).forEach(element => {\n                const newElement = element.cloneNode(true);\n                element.parentNode.replaceChild(newElement, element);\n                newElement.addEventListener(event, handler);\n                });\n                };\n\n                reattachListener('#createBtn', 'click', (event) => anvil.call(event.currentTarget, 'create_new_report'));\n                reattachListenersToAll('.refresh-button', 'click', (event) => {\n                anvil.call(event.currentTarget, 'refresh_data_click', window.activeSubTab);\n                });\n                reattachListenersToAll('.sub-tab', 'click', (event) => {\n                const tab = event.currentTarget;\n                document.querySelector('.sub-tab.active')?.classList.remove('active');\n                tab.classList.add('active');\n                window.activeSubTab = tab.dataset.tab;\n                document.querySelectorAll('.report-panel').forEach(panel => panel.classList.remove('active'));\n                document.getElementById(window.activeSubTab === 'my_reports' ? 'myReportsPanel' : 'structureReportsPanel').classList.add('active');\n                anvil.call(tab, 'apply_filters', window.activeSubTab);\n                });\n                reattachListener('.search-bar', 'input', (event) => {\n                anvil.call(event.currentTarget, 'search_reports', event.target.value, window.activeSubTab);\n                });\n\n                // --- Event listeners for the new filter system ---\n                reattachListener('#myReportsFilterBtn', 'click', () => { document.getElementById('myReportsFilterModal').style.display = \"block\"; });\n                reattachListener('#structureFilterBtn', 'click', () => { document.getElementById('structureFilterModal').style.display = \"block\"; });\n\n                reattachListenersToAll('.close-modal-btn', 'click', (event) => {\n                event.target.closest('.filter-modal').style.display = 'none';\n                });\n\n                reattachListener('#myReportsModalApplyBtn', 'click', (event) => {\n                const checkedStatuses = Array.from(document.querySelectorAll('#myReportsStatusList input:checked')).map(cb => cb.value);\n                const checkedPatients = Array.from(document.querySelectorAll('#myReportsPatientList input:checked')).map(cb => cb.value);\n                anvil.call(event.currentTarget, 'apply_my_reports_filters', checkedStatuses, checkedPatients);\n                document.getElementById('myReportsFilterModal').style.display = \"none\";\n                });\n\n                reattachListener('#structureModalApplyBtn', 'click', (event) => {\n                const checkedStatuses = Array.from(document.querySelectorAll('#structureStatusList input:checked')).map(cb => cb.value);\n                const checkedVets = Array.from(document.querySelectorAll('#structureVetList input:checked')).map(cb => cb.value);\n                anvil.call(event.currentTarget, 'apply_structure_filters', checkedStatuses, checkedVets);\n                document.getElementById('structureFilterModal').style.display = \"none\";\n                });\n                };\n                </script>\n  </body>\n</html>"
  type: HtmlTemplate
is_package: true
