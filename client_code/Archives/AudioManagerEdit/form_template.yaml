components:
- layout_properties: {slot: feedback_slot}
  name: user_feedback_1
  properties: {}
  type: form:Components.UserFeedback
- layout_properties: {slot: playback_slot}
  name: audio_playback_1
  properties: {}
  type: form:Components.AudioPlayback
- layout_properties: {slot: editor_slot}
  name: text_editor_1
  properties: {show_undo_redo_buttons: true}
  type: form:Components.TextEditor
- event_bindings: {x_save_clicked: report_footer_1_save_clicked, x_status_clicked: report_footer_1_status_clicked}
  layout_properties: {slot: bottom_buttons_slot}
  name: report_footer_1
  properties: {}
  type: form:Components.ReportFooter
- layout_properties: {slot: recorder_slot}
  name: recording_widget_1
  properties: {}
  type: form:Components.RecordingWidget
- data_bindings:
  - {code: 'self.item['''']', property: title, writeback: false}
  layout_properties: {slot: default}
  name: header_return_1
  properties: {return_form: Archives.ArchivesForm, title: ''}
  type: form:Components.HeaderReturn
container:
  properties:
    html: |-
      <!DOCTYPE html>
      <html lang="fr">
        <head>
          <meta charset="UTF-8" />
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Edit Report</title>
          <style>
            /* Basic Layout */
            * { box-sizing: border-box; font-family: Arial, sans-serif; margin: 0; padding: 0; }
            body { background-color: #f5f5f5; height: 100vh; overflow: hidden; }
            .container { display: flex; flex-direction: column; height: 100vh; max-width: 800px; margin: 0 auto; background: #fff; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
            .scrollable-content { flex: 1; overflow-y: auto; padding: 20px; padding-bottom: 80px; }

            /* Audio Section - Now with state management */
            .audio-section {
              position: relative;
              display: flex;
              flex-direction: column;
              align-items: center;
              justify-content: center;
              min-height: 250px; /* Prevents layout jumps */
              border-bottom: 1px solid #eee;
              margin-bottom: 20px;
            }
            #audioInputContainer, #audioDecisionContainer, #audioProcessingContainer {
              width: 100%;
              display: none; /* JS will manage visibility */
            }
            #audioDecisionContainer {
              flex-direction: column;
              align-items: center;
              gap: 15px;
            }
            .decision-buttons { display: flex; gap: 15px; margin-top: 15px; }
            .decision-button { padding: 10px 20px; border-radius: 4px; border: 1px solid #ddd; cursor: pointer; font-size: 14px; font-weight: bold; }
            .process { background-color: #4CAF50; color: white; border-color: #4CAF50; }
            .discard { background-color: #f44336; color: white; border-color: #f44336; }

            /* Banners */
            #bannerContainer { position: fixed; top: 20px; left: 50%; transform: translateX(-50%); z-index: 2000; }
            .banner { padding: 10px 20px; border-radius: 4px; color: #fff; }
            .banner-success { background-color: #4caf50; }
            .banner-error { background-color: #f44336; }
          </style>
        </head>
        <body>
          <div class="container" id="editor-stable-anchor">
            <div anvil-slot="default"></div>
            <div class="scrollable-content">
              <!-- Audio Section -->
              <div class="audio-section">
                <div id="audioInputContainer">
                  <div anvil-slot="recorder_slot"></div>
                </div>
                <div id="audioDecisionContainer">
                  <div anvil-slot="playback_slot"></div>
                  <div class="decision-buttons">
                    <button id="discardAudioBtn" class="decision-button discard">Discard</button>
                    <button id="processAudioBtn" class="decision-button process">Process Modification</button>
                  </div>
                </div>
                <div id="audioProcessingContainer">
                  <div anvil-slot="feedback_slot"></div>
                </div>
              </div>
              <!-- Editor -->
              <div anvil-slot="editor_slot"></div>
            </div>
            <!-- Footer -->
            <div anvil-slot="bottom_buttons_slot"></div>
          </div>
          <script>
            if (!window.__editor_globals) {
              window.__editor_globals = true;

              window.setAudioWorkflowState = (state) => {
                const input = document.getElementById('audioInputContainer');
                const decision = document.getElementById('audioDecisionContainer');
                const processing = document.getElementById('audioProcessingContainer');
                if(input) input.style.display = 'none';
                if(decision) decision.style.display = 'none';
                if(processing) processing.style.display = 'none';
                if (state === 'decision') { if(decision) decision.style.display = 'flex'; }
                else if (state === 'processing') { if(processing) processing.style.display = 'block'; }
                else { if(input) input.style.display = 'block'; }
              };
            }

            function attachEditorEvents() {
              const stableAnchor = document.getElementById('editor-stable-anchor');
              const discardBtn = document.getElementById('discardAudioBtn');
              const processBtn = document.getElementById('processAudioBtn');

              if(discardBtn) {
                const newBtn = discardBtn.cloneNode(true);
                discardBtn.parentNode.replaceChild(newBtn, discardBtn);
                newBtn.addEventListener('click', () => anvil.call(stableAnchor, 'reset_ui_to_input_state'));
              }
              if(processBtn) {
                const newBtn = processBtn.cloneNode(true);
                processBtn.parentNode.replaceChild(newBtn, processBtn);
                newBtn.addEventListener('click', () => anvil.call(stableAnchor, 'process_modification'));
              }
            }
            attachEditorEvents();
          </script>
        </body>
      </html>
  type: HtmlTemplate
is_package: true
