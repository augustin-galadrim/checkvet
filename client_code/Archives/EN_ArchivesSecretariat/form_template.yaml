components: []
container:
  properties:
    html: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <!-- Responsive meta tag -->\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <style>\n    /* Base styles, resets and container style */\n    * {\n      box-sizing: border-box;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n    }\n\n    body {\n      background-color: #f5f5f5;\n      height: 100vh;\n      overflow: hidden;\n    }\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      max-width: 800px;\n      width: 100%;\n      margin: 0 auto;\n      background-color: white;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .fixed-section {\n      background: white;\n      z-index: 10;\n    }\n\n    /* Navigation tabs */\n    .nav-tabs {\n      display: flex;\n      width: 100%;\n      border-bottom: 1px solid #ddd;\n    }\n    .nav-tab {\n      flex: 1;\n      padding: 8px 16px;\n      cursor: pointer;\n      border: 1px solid #ccc;\n      border-bottom: none;\n      background: #f8f8f8;\n      font-size: 14px;\n      position: relative;\n      margin-right: -1px;\n      text-align: center;\n    }\n    .nav-tab.active {\n      background: #e5e5e5;\n      border-top: 1px solid #999;\n      border-left: 1px solid #999;\n      border-right: 1px solid #999;\n      border-bottom: 1px solid #e5e5e5;\n      margin-bottom: -1px;\n    }\n\n    .actions-row {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 15px 20px;\n    }\n\n    .left-section {\n      display: flex;\n      align-items: center;\n      gap: 15px;\n      flex-wrap: wrap;\n    }\n\n    .create-button,\n    .vet-filter-button {\n      padding: 8px 16px;\n      background: #fff;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .create-button:hover,\n    .vet-filter-button:hover {\n      background: #f5f5f5;\n    }\n\n    .search-bar {\n      width: calc(100% - 40px);\n      padding: 8px;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      margin: 0 20px 15px 20px;\n    }\n\n    .scrollable-content {\n      flex: 1;\n      overflow-y: auto;\n      padding: 20px;\n    }\n\n    .record-entry {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      padding: 10px;\n      margin-bottom: 10px;\n      background: #fff;\n      cursor: pointer;\n    }\n\n    .record-subcase {\n      flex: 1;\n      padding: 0 10px;\n      text-align: left;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n\n    /* Trash icon style */\n    .trash-icon {\n      width: auto;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 0 4px;\n      cursor: pointer;\n    }\n    .trash-icon svg {\n      width: 18px;\n      height: 18px;\n      fill: #888;\n      transition: fill 0.2s;\n    }\n    .trash-icon:hover svg {\n      fill: #c00;\n    }\n\n    /* Custom scrollbar style */\n    .scrollable-content::-webkit-scrollbar {\n      width: 8px;\n    }\n    .scrollable-content::-webkit-scrollbar-track {\n      background: #f1f1f1;\n    }\n    .scrollable-content::-webkit-scrollbar-thumb {\n      background: #888;\n      border-radius: 4px;\n    }\n    .scrollable-content::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n\n    /* Status bar styles */\n    .status-nav {\n      display: flex;\n      align-items: center;\n      background-color: white;\n      border: 1px solid #e0e0e0;\n      border-radius: 25px;\n      padding: 5px;\n      width: fit-content;\n    }\n\n    .status-option {\n      display: flex;\n      align-items: center;\n      padding: 8px 16px;\n      gap: 8px;\n      color: #666;\n      cursor: pointer;\n      text-decoration: none;\n      font-family: system-ui, -apple-system, sans-serif;\n    }\n    .status-option:hover {\n      background-color: #f5f5f5;\n      border-radius: 20px;\n    }\n    .status-option.active {\n      background-color: #e8f0fe;\n      border-radius: 20px;\n      color: #1a73e8;\n    }\n    .icon {\n      width: 18px;\n      height: 18px;\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    /* Modal for veterinarian selection */\n    .vet-modal,\n    .vet-add-modal {\n      display: none;\n      position: fixed;\n      z-index: 999;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0,0,0,0.5);\n    }\n    .modal-content {\n      background-color: #fff;\n      width: 300px;\n      margin: 100px auto;\n      padding: 20px;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n      position: relative;\n    }\n    .modal-content h3 {\n      margin-bottom: 15px;\n    }\n    .vet-list,\n    .vet-add-results {\n      max-height: 200px;\n      overflow-y: auto;\n      margin-bottom: 15px;\n    }\n    .vet-item {\n      display: flex;\n      align-items: center;\n      margin-bottom: 8px;\n    }\n    .vet-item label {\n      margin-left: 8px;\n    }\n    .modal-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n    .modal-actions button {\n      padding: 6px 12px;\n      border: 1px solid #ccc;\n      background: #f8f8f8;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .modal-actions button:hover {\n      background: #f0f0f0;\n    }\n    /* Input for searching in the add veterinarian modal */\n    .vet-add-search {\n      width: 100%;\n      padding: 8px;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      margin-bottom: 10px;\n    }\n\n    /* Responsive adjustments */\n    @media (max-width: 800px) {\n      .container {\n        height: 100vh;\n      }\n      .nav-tab {\n        font-size: 12px;\n        padding: 6px 8px;\n      }\n      .actions-row {\n        padding: 10px 15px;\n      }\n      .search-bar {\n        margin: 0 10px 15px 10px;\n      }\n      .create-button,\n      .vet-filter-button {\n        padding: 6px 12px;\n        font-size: 13px;\n      }\n      .status-option {\n        padding: 6px 10px;\n        font-size: 13px;\n      }\n      .modal-content {\n        width: 90%;\n        margin: 50px auto;\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <!-- Fixed top section -->\n    <div class=\"fixed-section\">\n      <div class=\"nav-tabs\">\n        <button class=\"nav-tab\" data-tab=\"Production\">Production</button>\n        <button class=\"nav-tab\" data-tab=\"Templates\">Templates/AI</button>\n        <button class=\"nav-tab active\" data-tab=\"Archives\">Archives</button>\n        <button class=\"nav-tab\" data-tab=\"Settings\">Settings</button>\n      </div>\n\n      <div class=\"actions-row\">\n        <div class=\"left-section\">\n          <button class=\"create-button\" id=\"createBtn\">+ Create</button>\n          <!-- Status bar -->\n          <nav class=\"status-nav\">\n            <a href=\"#\" class=\"status-option active\" data-filter=\"Show all\">\n              <span class=\"icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"/>\n                </svg>\n              </span>\n              Show all\n            </a>\n            <a href=\"#\" class=\"status-option\" data-filter=\"Needs correction\">\n              <span class=\"icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\n                </svg>\n              </span>\n              Needs correction\n            </a>\n            <a href=\"#\" class=\"status-option\" data-filter=\"Validated\">\n              <span class=\"icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"/>\n                </svg>\n              </span>\n              Validated\n            </a>\n            <a href=\"#\" class=\"status-option\" data-filter=\"Sent\">\n              <span class=\"icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/>\n                </svg>\n              </span>\n              Sent\n            </a>\n          </nav>\n          <!-- Veterinarians filter button -->\n          <button class=\"vet-filter-button\" id=\"vetFilterBtn\">Veterinarians</button>\n        </div>\n      </div>\n\n      <input type=\"text\" class=\"search-bar\" placeholder=\"Search\">\n    </div>\n\n    <!-- Scrollable container for reports -->\n    <div class=\"scrollable-content\" id=\"reportsContainer\">\n      <!-- Content will be dynamically filled via JS -->\n    </div>\n  </div>\n\n  <!-- Modal for veterinarian selection -->\n  <div class=\"vet-modal\" id=\"vetModal\">\n    <div class=\"modal-content\">\n      <h3>Filter by Veterinarian</h3>\n      <div class=\"vet-list\" id=\"vetList\">\n        <!-- Checkboxes will be generated here -->\n      </div>\n      <div class=\"modal-actions\">\n        <button id=\"vetModalRetourBtn\">Back</button>\n        <button id=\"vetModalAddBtn\">Add Veterinarians</button>\n        <button id=\"vetModalApplyBtn\">Apply</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Modal for adding/searching new veterinarians -->\n  <div class=\"vet-add-modal\" id=\"vetAddModal\">\n    <div class=\"modal-content\">\n      <h3>Add a Veterinarian</h3>\n      <input type=\"text\" class=\"vet-add-search\" id=\"vetAddSearch\" placeholder=\"Search for a user\">\n      <div class=\"vet-add-results\" id=\"vetAddResults\">\n        <!-- Search results will be displayed here -->\n      </div>\n      <div class=\"modal-actions\">\n        <button id=\"vetAddRetourBtn\">Back</button>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    // -------------------------------------------------------------\n    // 1) Global Declarations for JS->Python calls\n    // -------------------------------------------------------------\n    window.__affiliated_vets = [];\n    window.__structure = null;\n\n    window.setAffiliatedVets = function(vetsArray) {\n      window.__affiliated_vets = vetsArray || [];\n      console.log(\"setAffiliatedVets called with:\", window.__affiliated_vets);\n      renderVetCheckboxes();\n    };\n\n    window.setStructure = function(structure) {\n      window.__structure = structure;\n      console.log(\"setStructure called with:\", window.__structure);\n    };\n\n    function formatLastModified(dateStr) {\n      if (!dateStr) return \"(N/A)\";\n      const parts = dateStr.split(\" \");\n      if (parts.length < 2) return dateStr;\n      const [yearStr, monthStr, dayStr] = parts[0].split(\"-\");\n      const year = parseInt(yearStr, 10);\n      const month = parseInt(monthStr, 10);\n      const day = parseInt(dayStr, 10);\n      const currentYear = new Date().getFullYear();\n      if (year !== currentYear) {\n        return \"last year\";\n      } else {\n        const monthNames = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n        return `${day} ${monthNames[month - 1] || ''}`.trim();\n      }\n    }\n\n    // -------------------------------------------------------------\n    // 2) Populate Reports in the UI\n    // -------------------------------------------------------------\n    // Called by Python -> self.call_js(\"populateReports\", list_of_reports)\n    window.populateReports = function(reports) {\n      console.log(\"populateReports called with\", reports.length, \"reports.\");\n      const container = document.getElementById(\"reportsContainer\");\n      if (!container) {\n        console.log(\"populateReports: #reportsContainer not found.\");\n        return;\n      }\n\n      // -------------------------------------------------------------\n      // SORT ASCENDING (oldest -> newest), THEN LOOP BACKWARDS\n      // => newest items appended first => top of the list\n      // -------------------------------------------------------------\n      reports.sort((a, b) => new Date(a.last_modified) - new Date(b.last_modified));\n      container.innerHTML = \"\";\n\n      for (let i = reports.length - 1; i >= 0; i--) {\n        const report = reports[i];\n\n        const entryDiv = document.createElement(\"div\");\n        entryDiv.className = \"record-entry\";\n\n        // 1) Patient Name\n        const nameDiv = document.createElement(\"div\");\n        nameDiv.className = \"record-subcase\";\n        nameDiv.textContent = report.name || \"(None)\";\n\n        // 2) Date\n        const dateDiv = document.createElement(\"div\");\n        dateDiv.className = \"record-subcase\";\n        dateDiv.textContent = formatLastModified(report.last_modified);\n\n        // 3) Status\n        const statutDiv = document.createElement(\"div\");\n        statutDiv.className = \"record-subcase\";\n        statutDiv.textContent = report.statut || \"(Not specified)\";\n\n        // 4) Trash Icon\n        const trashDiv = document.createElement(\"div\");\n        trashDiv.className = \"trash-icon\";\n        trashDiv.innerHTML = `\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M15 4V3c0-1.11-.89-2-2-2h-2c-1.11 0-2 .89-2 2v1H5v2h14V4h-4zm-6 0V3h2v1h-2zm-1 4v12a2 2 0 002 2h4a2 2 0 002-2V8H8z\"/>\n          </svg>\n        `;\n        // Stop row-click from firing if user clicks the trash icon\n        trashDiv.addEventListener(\"click\", function(ev) {\n          ev.stopPropagation();\n          anvil.call(ev.target, \"delete_report_client_side\", report.report_rich);\n        });\n\n        // Clicking the row -> open the form\n        entryDiv.addEventListener(\"click\", function(event) {\n          anvil.call(event.target, \"open_audio_manager_form\", report);\n        });\n\n        // Assemble the sub-elements\n        entryDiv.appendChild(nameDiv);\n        entryDiv.appendChild(dateDiv);\n        entryDiv.appendChild(statutDiv);\n        entryDiv.appendChild(trashDiv);\n\n        container.appendChild(entryDiv);\n      }\n    };\n\n    // -------------------------------------------------------------\n    // 3) Render Vet Checkboxes in the Filter Modal\n    // -------------------------------------------------------------\n    function renderVetCheckboxes() {\n      const vetList = document.getElementById(\"vetList\");\n      if (!vetList) return;\n      vetList.innerHTML = \"\";\n      window.__affiliated_vets.forEach(vetName => {\n        const itemDiv = document.createElement(\"div\");\n        itemDiv.className = \"vet-item\";\n        const checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.value = vetName;\n        checkbox.id = \"vetCheckbox_\" + vetName;\n        const label = document.createElement(\"label\");\n        label.setAttribute(\"for\", checkbox.id);\n        label.textContent = vetName;\n        itemDiv.appendChild(checkbox);\n        itemDiv.appendChild(label);\n        vetList.appendChild(itemDiv);\n      });\n    }\n\n    // -------------------------------------------------------------\n    // 4) Render Search Results in the \"Add Veterinarian\" Modal\n    // -------------------------------------------------------------\n    function renderVetAddResults(users) {\n      const resultsContainer = document.getElementById(\"vetAddResults\");\n      resultsContainer.innerHTML = \"\";\n      if (!users || users.length === 0) {\n        resultsContainer.textContent = \"No results.\";\n        return;\n      }\n      users.forEach(user => {\n        const userDiv = document.createElement(\"div\");\n        userDiv.className = \"vet-item\";\n        userDiv.style.cursor = \"pointer\";\n        userDiv.textContent = user.name || user.email;\n        userDiv.addEventListener(\"click\", function(evt) {\n          const confirmAdd = window.confirm(\"Do you want to allow this user to join your structure?\");\n          if (confirmAdd) {\n            anvil.call(evt.target, \"add_authorized_vet_relay\", window.__structure, user.email)\n              .then(result => {\n                alert(\"User added.\");\n                document.getElementById(\"vetAddModal\").style.display = \"none\";\n                document.getElementById(\"vetModal\").style.display = \"block\";\n              })\n              .catch(err => {\n                alert(\"Error while adding: \" + err);\n              });\n          }\n        });\n        resultsContainer.appendChild(userDiv);\n      });\n    }\n\n    // -------------------------------------------------------------\n    // 5) Attach Event Listeners after DOM is loaded\n    // -------------------------------------------------------------\n    (function attachArchivesEvents(){\n      console.log(\"EN ArchivesSecretariat: Attaching event listeners...\");\n\n      // Navigation tabs\n      const tabs = document.querySelectorAll('.nav-tab');\n      tabs.forEach(tab => {\n        tab.addEventListener('click', (event) => {\n          const oldActive = document.querySelector('.nav-tab.active');\n          if (oldActive) oldActive.classList.remove('active');\n          tab.classList.add('active');\n          const tabValue = tab.getAttribute(\"data-tab\");\n          if (tabValue === 'Production') {\n            anvil.call(event.target, 'open_production_form');\n          } else if (tabValue === 'Templates') {\n            anvil.call(event.target, 'open_templates_form');\n          } else if (tabValue === 'Settings') {\n            anvil.call(event.target, 'open_settings_form');\n          }\n          // If 'Archives', do nothing special\n        });\n      });\n\n      // Create button\n      const createBtn = document.getElementById('createBtn');\n      if (createBtn) {\n        createBtn.replaceWith(createBtn.cloneNode(true));\n        const newCreateBtn = document.getElementById('createBtn');\n        newCreateBtn.addEventListener('click', (event) => {\n          anvil.call(event.target, 'open_create_form');\n        });\n      }\n\n      // Status bar options\n      const statusOptions = document.querySelectorAll('.status-option');\n      statusOptions.forEach(option => {\n        option.addEventListener('click', (event) => {\n          event.preventDefault();\n          const oldActive = document.querySelector('.status-option.active');\n          if (oldActive) oldActive.classList.remove('active');\n          option.classList.add('active');\n          const filterVal = option.getAttribute('data-filter');\n          anvil.call(event.target, 'filter_reports_client', filterVal);\n        });\n      });\n\n      // Search bar\n      const searchInput = document.querySelector('.search-bar');\n      if (searchInput) {\n        searchInput.addEventListener('input', function(event) {\n          const query = event.target.value;\n          anvil.call(event.target, 'search_reports_client', query);\n        });\n      }\n\n      // Veterinarians filter button and modal management\n      const vetFilterBtn = document.getElementById('vetFilterBtn');\n      const vetModal = document.getElementById('vetModal');\n      const vetModalRetourBtn = document.getElementById('vetModalRetourBtn');\n      const vetModalApplyBtn = document.getElementById('vetModalApplyBtn');\n      const vetModalAddBtn = document.getElementById('vetModalAddBtn');\n\n      vetFilterBtn.addEventListener('click', () => {\n        renderVetCheckboxes();\n        vetModal.style.display = \"block\";\n      });\n\n      vetModalRetourBtn.addEventListener('click', () => {\n        vetModal.style.display = \"none\";\n      });\n\n      vetModalApplyBtn.addEventListener('click', (event) => {\n        const checkedVets = [];\n        const checkboxes = document.querySelectorAll('#vetList input[type=\"checkbox\"]');\n        checkboxes.forEach(cb => {\n          if (cb.checked) {\n            checkedVets.push(cb.value);\n          }\n        });\n        anvil.call(event.target, 'filter_reports_vets', checkedVets);\n        vetModal.style.display = \"none\";\n      });\n\n      vetModalAddBtn.addEventListener('click', () => {\n        vetModal.style.display = \"none\";\n        document.getElementById(\"vetAddModal\").style.display = \"block\";\n      });\n\n      const vetAddSearch = document.getElementById('vetAddSearch');\n      vetAddSearch.addEventListener('input', function(event) {\n        const searchTerm = event.target.value;\n        anvil.call(event.target, 'search_users_relay', searchTerm)\n          .then(users => {\n            renderVetAddResults(users);\n          })\n          .catch(err => {\n            console.error(\"Error searching users:\", err);\n          });\n      });\n\n      const vetAddRetourBtn = document.getElementById('vetAddRetourBtn');\n      vetAddRetourBtn.addEventListener('click', () => {\n        document.getElementById(\"vetAddModal\").style.display = \"none\";\n        vetModal.style.display = \"block\";\n      });\n\n      console.log(\"EN ArchivesSecretariat: Event listeners attached.\");\n    })();\n  </script>\n  <script>\n    // Listen for when the app comes back online\n    window.addEventListener('online', function() {\n      console.log(\"App back online, refreshing session\");\n      anvil.call(document.body, 'refresh_session_relay');\n    });\n    \n    // Listen for when the app regains focus (user returns to the tab)\n    document.addEventListener('visibilitychange', function() {\n      if (document.visibilityState === 'visible') {\n        console.log(\"App visible again, checking session\");\n        anvil.call(document.body, 'refresh_session_relay');\n      }\n    });\n  </script>\n</body>\n</html>\n"
  type: HtmlTemplate
is_package: true
