components:
- layout_properties: {slot: time_display_slot}
  name: time_display_1
  properties: {}
  type: form:Components.TimeDisplay
- event_bindings: {x_save_clicked: report_footer_1_save_clicked, x_status_clicked: report_footer_1_status_clicked}
  layout_properties: {slot: bottom_buttons_slot}
  name: report_footer_1
  properties: {}
  type: form:Components.ReportFooter
- event_bindings: {}
  layout_properties: {slot: playback_slot}
  name: audio_playback_1
  properties: {}
  type: form:Components.AudioPlayback
- layout_properties: {slot: editor_slot}
  name: text_editor_1
  properties: {}
  type: form:Components.TextEditor
- data_bindings:
  - {code: '', property: item, writeback: false}
  event_bindings: {}
  layout_properties: {slot: recorder_slot}
  name: recording_widget
  properties: {}
  type: form:Components.RecordingWidget
- layout_properties: {slot: default}
  name: header_nav_1
  properties: {active_tab: Production}
  type: form:Components.HeaderNav
- layout_properties: {slot: feedback_slot}
  name: user_feedback_1
  properties: {}
  type: form:Components.UserFeedback
- data_bindings: []
  event_bindings: {x_import_item: queue_manager_1_x_import_item}
  layout_properties: {slot: queue}
  name: queue_manager_1
  properties: {disable_import: false}
  type: form:Components.QueueManager
container:
  properties:
    html: "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <!-- Responsive for mobile devices -->\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\n    <title>Audio Management Interface</title>\n\n    <!-- External libraries for iOS compatibility and functionality -->\n    <script src=\"https://www.webrtc-experiment.com/RecordRTC.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/nosleep/0.12.0/NoSleep.min.js\"></script>\n\n    <style>\n      /* =====================================================\n      Basic styles (Unchanged to preserve look and feel)\n      ===================================================== */\n      * {\n        box-sizing: border-box;\n        font-family: Arial, sans-serif;\n        margin: 0;\n        padding: 0;\n      }\n      body {\n        background-color: #f5f5f5;\n        height: 100vh;\n        overflow: hidden;\n      }\n      .container {\n        display: flex;\n        flex-direction: column;\n        height: 100vh;\n        width: 100%;\n        max-width: 800px;\n        margin: 0 auto;\n        background-color: white;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      }\n      /* =====================================================\n      Fixed section (tabs + actions)\n      ===================================================== */\n      .actions-row {\n        display: flex;\n        align-items: center;\n        padding: 15px 20px;\n      }\n      .actions-row > [anvil-slot=\"time_display_slot\"] {\n        margin-left: auto;\n      }\n      /* =====================================================\n      Scrollable content\n      ===================================================== */\n      .scrollable-content {\n        flex: 1;\n        overflow-y: auto;\n        padding: 20px;\n        padding-bottom: 80px;\n        -webkit-overflow-scrolling: touch;\n\n        /* --- ADD THESE LINES --- */\n        display: flex;\n        flex-direction: column;\n        gap: 20px; /* Adds consistent spacing between all sections */\n      }\n\n      #retryProcessBtn {\n        position: absolute;\n        top: -40px;\n        right: 10px;\n        padding: 8px 12px;\n        background-color: #4caf50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        display: none;\n      }\n\n      .slide-toggle-container {\n        display: flex;\n        position: relative;\n        width: 320px;\n        margin: 20px auto;\n        background-color: #f0f0f0;\n        border-radius: 25px;\n        padding: 5px;\n        border: 1px solid #ddd;\n      }\n\n      .toggle-option {\n        flex: 1;\n        text-align: center;\n        padding: 10px 0;\n        cursor: pointer;\n        color: #555;\n        font-weight: 500;\n        font-size: 14px;\n        z-index: 2;\n        transition: color 0.3s ease;\n        user-select: none;\n      }\n\n      .toggle-option.active {\n        color: #ffffff;\n      }\n\n      .toggle-slider {\n        position: absolute;\n        top: 5px;\n        left: 5px;\n        height: calc(100% - 10px);\n        width: calc(50% - 5px);\n        background-color: #4CAF50;\n        border-radius: 25px;\n        transition: transform 0.3s ease-in-out;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        z-index: 1;\n      }\n\n      .slide-toggle-container.upload-active .toggle-slider {\n        transform: translateX(100%);\n      }\n\n      .audio-section {\n        position: relative;\n        /* display: block; is the default, so we don't need to specify it. */\n        /* Removing the flex properties allows height to be auto. */\n        padding: 10px 0;\n        transition: all 0.3s ease-in-out; /* Animates changes to height/padding */\n      }\n      \n      /* =====================================================\n      Upload Voice Memo Section for all devices\n      ===================================================== */\n      .upload-section {\n        margin: 20px auto;\n        max-width: 400px;\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n\n      .upload-container {\n        width: 100%;\n        border: 2px dashed #aaa;\n        border-radius: 10px;\n        padding: 20px;\n        text-align: center;\n        background-color: #f8f8f8;\n        transition: all 0.3s ease;\n        cursor: pointer;\n        margin-bottom: 15px;\n      }\n\n      .upload-container:hover {\n        border-color: #4CAF50;\n        background-color: #f0f9f0;\n      }\n\n      .upload-container.dragover {\n        border-color: #4CAF50;\n        background-color: #e7f6e7;\n        transform: scale(1.02);\n      }\n\n      .upload-icon {\n        font-size: 40px;\n        color: #666;\n        margin-bottom: 10px;\n      }\n\n      .upload-text {\n        color: #333;\n        font-size: 16px;\n        margin-bottom: 5px;\n      }\n\n      .upload-description {\n        color: #666;\n        font-size: 14px;\n        margin-bottom: 15px;\n      }\n\n      .upload-button {\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        padding: 10px 20px;\n        border-radius: 5px;\n        font-size: 16px;\n        cursor: pointer;\n        transition: background-color 0.3s;\n        min-height: 44px; /* iOS minimum touch target size */\n      }\n\n      .upload-button:hover {\n        background-color: #45a049;\n      }\n\n      .upload-button:active {\n        transform: scale(0.98);\n        opacity: 0.9;\n      }\n\n      #audioFileInput {\n        display: none;\n      }\n\n      .file-info {\n        display: none;\n        margin-top: 15px;\n        padding: 10px;\n        background-color: #e8f5e9;\n        border-radius: 5px;\n        width: 100%;\n        font-size: 14px;\n      }\n\n      .file-name {\n        font-weight: bold;\n        word-break: break-all;\n      }\n      \n      .file-size {\n        color: #666;\n      }\n\n      .file-actions {\n        display: flex;\n        justify-content: space-between;\n        margin-top: 10px;\n      }\n\n      .file-button {\n        padding: 5px 10px;\n        border-radius: 3px;\n        border: none;\n        font-size: 14px;\n        cursor: pointer;\n        min-height: 36px;\n      }\n\n      .process-file-button {\n        background-color: #4CAF50;\n        color: white;\n      }\n\n      .remove-file-button {\n        background-color: #f44336;\n        color: white;\n      }\n\n      .format-warning {\n        display: none;\n        margin-top: 10px;\n        padding: 8px;\n        background-color: #fff3e0;\n        border-left: 4px solid #ff9800;\n        font-size: 13px;\n        color: #6d4c41;\n      }\n\n      /* iOS-specific guidance */\n      .ios-instructions {\n        margin: 15px 0;\n        padding: 15px;\n        background-color: #f8f9fa;\n        border-left: 4px solid #007aff;\n        border-radius: 4px;\n        font-size: 14px;\n        display: none; /* Hidden by default, shown by JS for iOS */\n      }\n\n      .ios-instructions h4 {\n        color: #007aff;\n        margin-top: 0;\n        margin-bottom: 10px;\n      }\n\n      .ios-instructions ol {\n        padding-left: 20px;\n      }\n\n      .ios-instructions li {\n        margin-bottom: 8px;\n      }\n\n      /* Toggle between upload and recording */\n      .mode-toggle {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 15px; /* Reduced from 20px */\n        border-bottom: 1px solid #eee;\n        padding-bottom: 10px; /* Reduced from 15px */\n      }\n\n      .toggle-button {\n        padding: 8px 16px;\n        margin: 0 5px;\n        background-color: #f1f1f1;\n        border: 1px solid #ddd;\n        border-radius: 20px;\n        font-size: 14px;\n        cursor: pointer;\n        transition: all 0.3s ease;\n      }\n\n      .toggle-button.active {\n        background-color: #4CAF50;\n        color: white;\n        border-color: #4CAF50;\n      }\n\n\n      /* =====================================================\n      Settings Section\n      ===================================================== */\n      .parameters-section {\n        background: white;\n        padding: 20px;\n        border-radius: 8px;\n        margin-bottom: 20px;\n      }\n      .parameter-row {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 15px;\n      }\n      .parameter-row label {\n        font-weight: bold;\n        margin-right: 10px;\n      }\n      .template-select-container .select-button {\n        min-width: 200px;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background: white;\n        cursor: pointer;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        font-size: 14px;\n      }\n      .dropdown {\n        min-width: 200px;\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background: white;\n        cursor: pointer;\n        position: relative;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      .arrow { margin-left: 10px; color: #666; }\n      .dropdown-menu {\n        position: absolute;\n        top: 100%;\n        left: 0;\n        width: 100%;\n        background: white;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        display: none;\n        z-index: 1000;\n      }\n      .dropdown-menu.active { display: block; }\n      .dropdown-menu div {\n        padding: 8px;\n        cursor: pointer;\n      }\n      .dropdown-menu div:hover { background: #f5f5f5; }\n\n      /* =====================================================\n      Patient selection modal (for saving)\n      ===================================================== */\n      .patient-select-container {\n        position: relative;\n        width: 300px;\n        font-family: system-ui, -apple-system, sans-serif;\n      }\n      .select-button#patientSelectBtn { display: none; }\n      .search-container { position: relative; margin-bottom: 20px; }\n      .search-icon {\n        position: absolute;\n        left: 12px;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 16px;\n        height: 16px;\n        color: #666;\n      }\n      #patientSearchHolder {\n        /* Container rebuilt dynamically by Python->JS call */\n      }\n      .search-input {\n        width: 100%;\n        padding: 8px 12px 8px 36px;\n        border: 1px solid #ddd;\n        border-radius: 6px;\n        font-size: 14px;\n        box-sizing: border-box;\n      }\n      .search-input:focus {\n        outline: none;\n        border-color: #2563eb;\n        box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);\n      }\n      .new-patient-btn {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        width: 100%;\n        padding: 8px 12px;\n        background: none;\n        border: none;\n        border-radius: 6px;\n        color: #16a34a;\n        cursor: pointer;\n        font-size: 14px;\n        text-align: left;\n      }\n      .new-patient-btn:hover { background-color: #f0fdf4; }\n      .divider {\n        height: 1px;\n        background-color: #ddd;\n        margin: 15px 0;\n      }\n      .patients-list { max-height: 200px; overflow-y: auto; }\n      .patient-item {\n        display: block;\n        width: 100%;\n        padding: 8px 12px;\n        background: none;\n        border: none;\n        border-radius: 6px;\n        text-align: left;\n        cursor: pointer;\n        font-size: 14px;\n        color: #333;\n      }\n      .patient-item:hover { background-color: #f3f4f6; }\n      .close-button {\n        position: absolute;\n        top: 15px;\n        right: 15px;\n        background: none;\n        border: none;\n        cursor: pointer;\n        padding: 5px;\n        color: #666;\n      }\n\n      /* =====================================================\n      Template selection modal\n      ===================================================== */\n      .template-select-container .modal {\n        z-index: 1100;\n      }\n      #templateModal {\n        display: none;\n        position: fixed;\n        top: 0; left: 0;\n        width: 100%; height: 100%;\n        background-color: rgba(0, 0, 0, 0.5);\n      }\n      #templateModal .modal-content {\n        margin: 15% auto;\n        padding: 20px;\n        width: 90%;\n        max-width: 400px;\n        border-radius: 8px;\n        box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n        position: relative;\n      }\n      #templateModal .modal-header { margin-bottom: 20px; }\n      #templateModal .modal-title {\n        font-size: 18px;\n        font-weight: 600;\n        margin: 0 0 15px 0;\n      }\n      #templateModal .search-container { position: relative; margin-bottom: 20px; }\n      #templateModal .search-icon {\n        position: absolute;\n        left: 12px;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 16px;\n        height: 16px;\n        color: #666;\n      }\n      #templateModal .search-input {\n      width: 100%;\n      padding: 8px 12px 8px 36px;\n      border: 1px solid #ddd;\n      border-radius: 6px;\n      font-size: 14px;\n      box-sizing: border-box;\n      }\n      #templateModal .templates-list { max-height: 300px; overflow-y: auto; }\n      #templateModal .template-item {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n      padding: 8px 12px;\n      background: none;\n      border: none;\n      border-radius: 6px;\n      text-align: left;\n      cursor: pointer;\n      font-size: 14px;\n      color: #333;\n      }\n      #templateModal .template-item:hover { background: #f3f4f6; }\n      #templateModal .star-icon {\n      font-size: 16px;\n      line-height: 1;\n      }\n      #templateModal .close-button {\n      position: absolute;\n      top: 15px;\n      right: 15px;\n      background: none;\n      border: none;\n      cursor: pointer;\n      padding: 5px;\n      color: #666;\n      }\n\n      /* =====================================================\n      Banners (temporary messages)\n      ===================================================== */\n      #bannerContainer {\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 2000;\n      width: 90%;\n      max-width: 400px;\n      }\n\n      .banner {\n      margin-bottom: 10px;\n      padding: 10px 20px;\n      border-radius: 4px;\n      color: #fff;\n      opacity: 0.9;\n      font-size: 14px;\n      min-width: 200px;\n      text-align: center;\n      }\n      .banner-success {\n      background-color: #4caf50;\n      }\n      .banner-error {\n      background-color: #f44336;\n      }\n\n      /* =====================================================\n      Responsive design (mobile)\n      ===================================================== */\n      @media (max-width: 800px) {\n      .container {\n      height: 100vh;\n      }\n      .bottom-buttons {\n      width: 100%;\n      left: 0;\n      transform: none;\n      }\n      .nav-tab {\n      font-size: 12px;\n      padding: 6px 8px;\n      }\n      .actions-row {\n      padding: 10px 15px;\n      }\n      .upload-section {\n      margin-top: 10px;\n      }\n      .mode-toggle {\n      margin-bottom: 10px;\n      padding-bottom: 10px;\n      }\n      .toggle-button {\n      font-size: 13px;\n      padding: 6px 12px;\n      }\n      @supports (-webkit-touch-callout: none) {\n      .upload-button, .file-button, .toggle-button {\n      padding: 12px 20px;\n      min-height: 44px;\n      font-size: 16px;\n      }\n      }\n      }\n      /* ADD THESE NEW STYLES */\n      #audioDecisionContainer {\n        display: none; \n        padding: 10px 0;\n        display: flex;\n        flex-direction: column; /* Stack items vertically */\n        align-items: center;    /* Center them horizontally */\n        gap: 15px;              /* Creates space between playback and buttons */\n        margin-top: 15px;\n      }\n      .decision-buttons {\n        display: flex;\n        gap: 15px;\n      }\n      .decision-button {\n        padding: 10px 20px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        background: white;\n        cursor: pointer;\n        font-size: 14px;\n        font-weight: bold;\n        transition: all 0.2s ease;\n      }\n      .decision-button:hover {\n        background: #f5f5f5;\n        border-color: #999;\n      }\n      .decision-button.process {\n        background-color: #4CAF50;\n        border-color: #4CAF50;\n        color: white;\n      }\n      .decision-button.process:hover {\n        background-color: #45a049;\n      }\n      .decision-button.discard {\n        background-color: #f44336;\n        border-color: #f44336;\n        color: white;\n      }\n      .decision-button.discard:hover {\n        background-color: #e53935;\n      }\n      .modal {\n        display: none;\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.5);\n        z-index: 10010;\n        align-items: center;\n        justify-content: center;\n      }\n      .modal-content {\n        position: relative;\n        background-color: white;\n        padding: 20px;\n        width: 90%;\n        max-width: 500px;\n        border-radius: 8px;\n        box-shadow: 0 4px 10px rgba(0,0,0,0.2);\n      }\n      .modal-header {\n        font-size: 18px;\n        font-weight: bold;\n        margin-bottom: 15px;\n      }\n      .modal-body p { margin-bottom: 15px; }\n      .modal-body label { font-weight: bold; margin-bottom: 5px; display: block; }\n      .modal-body input {\n        width: 100%;\n        padding: 10px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        font-size: 16px;\n        margin-bottom: 15px;\n      }\n      .modal-footer {\n        display: flex;\n        justify-content: flex-end;\n        gap: 10px;\n        margin-top: 20px;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <!-- Fixed section: Tabs + Actions -->\n      <div class=\"fixed-section\">\n        <div anvil-slot=\"default\"></div>\n        <div class=\"actions-row\">\n          <div anvil-slot=\"queue\"></div>\n          <div anvil-slot=\"time_display_slot\"></div>\n        </div>\n      </div>\n\n      <!-- Scrollable content -->\n      <div class=\"scrollable-content\">\n        <!-- Settings Section -->\n        <div class=\"parameters-section\">\n          <div class=\"parameter-row\">\n            <label id=\"label_template\">Template</label>\n            <div class=\"template-select-container\">\n              <button class=\"select-button\" id=\"templateSelectBtn\">\n                <span id=\"select_template_placeholder\">Select a template</span>\n                <span>▼</span>\n              </button>\n            </div>\n          </div>\n          <div class=\"parameter-row\">\n            <label id=\"label_language\">Language</label>\n            <div class=\"dropdown\" id=\"langueDropdown\">\n              <span>🇬🇧</span>\n              <span class=\"arrow\">▼</span>\n              <div class=\"dropdown-menu\">\n                <div data-value=\"🇫🇷\">🇫🇷</div>\n                <div data-value=\"🇬🇧\">🇬🇧</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- Audio Section (Playback + Recording) -->\n        <!-- ADD THIS NEW BLOCK IN ITS PLACE -->\n        <div class=\"audio-section\">\n\n          <!-- Container for the initial input state -->\n          <div id=\"audioInputContainer\">\n            <!-- Mode toggle -->\n            <div class=\"slide-toggle-container\">\n              <div class=\"toggle-option active\" id=\"recordToggle\">Record</div>\n              <div class=\"toggle-option\" id=\"uploadToggle\">Upload</div>\n              <div class=\"toggle-slider\"></div>\n            </div>\n\n            <!-- Recording Mode -->\n            <div class=\"recording-controls\" id=\"recordingMode\">\n              <div anvil-slot=\"recorder_slot\"></div>\n            </div>\n\n            <!-- Upload Mode -->\n            <div class=\"upload-section\" id=\"uploadMode\" style=\"display: none;\">\n              <div class=\"upload-container\" id=\"dropZone\">\n                <div class=\"upload-icon\">📋</div>\n                <div class=\"upload-text\" id=\"upload_text_drop\">Drop your voice memo here</div>\n                <div class=\"upload-description\" id=\"upload_description_select\">or click to select a file</div>\n                <input type=\"file\" id=\"audioFileInput\" accept=\"audio/*,.m4a,.caf\">\n                <label for=\"audioFileInput\" class=\"upload-button\" id=\"upload_button_select\">Select file</label>\n              </div>\n              <div class=\"ios-instructions\" style=\"display: none;\"> <!-- Hidden by default -->\n                <h4>For iPhone users:</h4>\n                <p>To use your voice memos:</p>\n                <ol>\n                  <li>Open the <strong>Files</strong> app on your iPhone.</li>\n                  <li>Locate the voice memo (e.g., in <strong>On My iPhone > Voice Memos</strong>).</li>\n                  <li>Tap and hold the file, choose <strong>Share</strong>, then <strong>Save to Files</strong>.</li>\n                  <li>Save it to an accessible location like <strong>iCloud Drive</strong>.</li>\n                  <li>Return here and use the <strong>\"Select file\"</strong> button.</li>\n                </ol>\n              </div>\n            </div>\n          </div>\n\n          <!-- Container for the decision state (Process/Discard) -->\n          <div id=\"audioDecisionContainer\" style=\"display: none;\">\n            <div anvil-slot=\"playback_slot\"></div>\n            <div class=\"decision-buttons\">\n              <button id=\"discardAudioBtn\" class=\"decision-button discard\">Discard Audio</button>\n              <button id=\"processAudioBtn\" class=\"decision-button process\">Process Audio</button>\n            </div>\n          </div>\n          <div id=\"audioProcessingContainer\" style=\"display: none;\">\n            <div anvil-slot=\"feedback_slot\"></div>\n          </div>\n        </div>\n\n        <!-- Editor Section -->\n        <div anvil-slot=\"editor_slot\"></div>\n\n        <!-- Stable anchor for Python calls that might occur when other elements are hidden -->\n        <div id=\"stableAnchor\" style=\"display:none;\"></div>\n      </div>\n\n      <!-- Bottom buttons -->\n      <div anvil-slot=\"bottom_buttons_slot\"></div>\n    </div>\n\n    <!-- Modals -->\n    <div class=\"patient-select-container\">\n      <div class=\"modal\" id=\"patientModal\">\n        <div class=\"modal-content\">\n          <button class=\"close-button\" id=\"closePatientModalBtn\">✕</button>\n          <div class=\"modal-header\">\n            <h3 class=\"modal-title\" id=\"select_patient_title\">Select a patient</h3>\n            <div class=\"search-container\">\n              <svg class=\"search-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n              </svg>\n              <div id=\"patientSearchHolder\">\n                <input type=\"text\" class=\"search-input\" placeholder=\"Search for a patient...\" id=\"searchInput\">\n              </div>\n            </div>\n          </div>\n          <button class=\"new-patient-btn\" id=\"newPatientBtn\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n              <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\"></path><circle cx=\"9\" cy=\"7\" r=\"4\"></circle><line x1=\"19\" y1=\"8\" x2=\"19\" y2=\"14\"></line><line x1=\"16\" y1=\"11\" x2=\"22\" y2=\"11\"></line>\n            </svg>\n            New patient\n          </button>\n          <div class=\"divider\"></div>\n          <div class=\"patients-list\" id=\"patientsList\"></div>\n        </div>\n      </div>\n    </div>\n    <div class=\"template-select-container\">\n      <div class=\"modal\" id=\"templateModal\">\n        <div class=\"modal-content\">\n          <button class=\"close-button\" id=\"closeTemplateModalBtn\">✕</button>\n          <div class=\"modal-header\">\n            <h3 class=\"modal-title\" id=\"select_template_title\">Select a template</h3>\n            <div class=\"search-container\">\n              <svg class=\"search-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n              </svg>\n              <input type=\"text\" class=\"search-input\" placeholder=\"Search for a template...\" id=\"templateSearchInput\">\n            </div>\n          </div>\n          <div class=\"templates-list\" id=\"templatesList\"></div>\n        </div>\n      </div>\n    </div>\n    <div id=\"bannerContainer\"></div>\n\n    <!-- Main script (JS) -->\n    <script>\n      // ===========================================================================================\n      // JAVASCRIPT FOR AUDIO MANAGEMENT INTERFACE\n      // ===========================================================================================\n\n      // --------------------------------------------------------------------------------------------\n      // SECTION 1: PYTHON-CALLABLE FUNCTIONS\n      // --------------------------------------------------------------------------------------------\n      window.setLanguageDropdown = function(langCode) {\n        const dropdown = document.getElementById('langueDropdown');\n        if (!dropdown) return;\n        const displaySpan = dropdown.querySelector('span:first-child');\n        if (!displaySpan) return;\n\n        if (langCode === 'FR') {\n          displaySpan.textContent = '🇫🇷';\n        } else { // Default to EN\n          displaySpan.textContent = '🇬🇧';\n        }\n      };\n\n      window.setElementText = function(elementId, newText) {\n        const element = document.getElementById(elementId);\n        if (!element) return;\n        const targetSpan = element.querySelector('span');\n        if (targetSpan && element.children.length > 0 && !targetSpan.classList.contains('arrow')) {\n          targetSpan.textContent = newText;\n        } else {\n          element.textContent = newText;\n        }\n      };\n\n      window.setPlaceholderById = function(elementId, newText) {\n        const element = document.getElementById(elementId);\n        if (element) {\n          element.placeholder = newText;\n        }\n      };\n\n      window.getDropdownSelectedValue = function(dropdownId) {\n        const dropdown = document.getElementById(dropdownId);\n        if (!dropdown) return \"\";\n        if (dropdownId === \"templateSelectBtn\" && dropdown.dataset.templateName) {\n          return dropdown.dataset.templateName;\n        }\n        const spanElem = dropdown.querySelector(\"span:first-child\");\n        return spanElem ? spanElem.textContent.trim() : \"\";\n      };\n\n      window.displayBanner = function(message, type) {\n        const bannerContainer = document.getElementById('bannerContainer');\n        if (!bannerContainer) return;\n        const banner = document.createElement('div');\n        banner.className = 'banner ' + (type === 'success' ? 'banner-success' : 'banner-error');\n        banner.textContent = message;\n        bannerContainer.appendChild(banner);\n        setTimeout(() => {\n          banner.style.opacity = '0';\n          setTimeout(() => banner.remove(), 300);\n        }, 3000);\n      };\n\n      window.rebuildPatientSearchInput = function() {\n        const searchHolder = document.getElementById(\"patientSearchHolder\");\n        if (searchHolder) {\n          const newInput = document.createElement(\"input\");\n          newInput.type = \"text\";\n          newInput.className = \"search-input\";\n          newInput.id = \"searchInput\";\n          newInput.placeholder = \"Search for a patient...\";\n          newInput.addEventListener('input', () => window.searchPatientsInModal(newInput.value));\n          searchHolder.innerHTML = \"\";\n          searchHolder.appendChild(newInput);\n        }\n      };\n\n      window.populateTemplateModal = function(templates) {\n        templates.sort((a, b) => a.name.localeCompare(b.name));\n        window.templatesData = templates;\n        let defaultTemplate = templates[0];\n        if (defaultTemplate) {\n          window.selectTemplate(defaultTemplate, false);\n        }\n        window.renderTemplates(templates);\n      };\n\n      // --------------------------------------------------------------------------------------------\n      // GOLDEN RULE 1: DEFINE GLOBAL VARIABLES AND HELPERS ONLY ONCE\n      // --------------------------------------------------------------------------------------------\n      if (!window.__my_audio_manager_globals) {\n        window.__my_audio_manager_globals = true;\n\n        window.isIOS = function() {\n          const isStandardIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n          const isIPadOnIOS13 = (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);\n          return isStandardIOS || isIPadOnIOS13;\n        };\n\n        window.toggleMode = (mode) => {\n          const recMode = document.getElementById('recordingMode');\n          const upMode = document.getElementById('uploadMode');\n          const toggleContainer = document.querySelector('.slide-toggle-container');\n          const recordToggle = document.getElementById('recordToggle');\n          const uploadToggle = document.getElementById('uploadToggle');\n\n          const isRecord = mode === 'record';\n\n          if(recMode) recMode.style.display = isRecord ? 'block' : 'none';\n          if(upMode) upMode.style.display = isRecord ? 'none' : 'block';\n\n          if (toggleContainer) {\n            if (isRecord) {\n              toggleContainer.classList.remove('upload-active');\n              recordToggle.classList.add('active');\n              uploadToggle.classList.remove('active');\n            } else {\n              toggleContainer.classList.add('upload-active');\n              recordToggle.classList.remove('active');\n              uploadToggle.classList.add('active');\n            }\n          }\n        };\n\n        window.setAudioWorkflowState = (state) => {\n          const inputContainer = document.getElementById('audioInputContainer');\n          const decisionContainer = document.getElementById('audioDecisionContainer');\n          const processingContainer = document.getElementById('audioProcessingContainer'); // Get the new container\n\n          // Hide all containers by default\n          if(inputContainer) inputContainer.style.display = 'none';\n          if(decisionContainer) decisionContainer.style.display = 'none';\n          if(processingContainer) processingContainer.style.display = 'none';\n\n          // Show the correct container based on the state\n          if (state === 'decision') {\n            if(decisionContainer) decisionContainer.style.display = 'flex';\n          } else if (state === 'processing') {\n            if(processingContainer) processingContainer.style.display = 'block';\n          } else { // 'input' state by default\n            if(inputContainer) inputContainer.style.display = 'block';\n          }\n        };;\n\n        window.handleFileSelect = (event) => {\n          const file = event.dataTransfer ? event.dataTransfer.files[0] : event.target.files[0];\n          if (!file) return;\n          if (!file.type.startsWith('audio/') && !/\\\\.(m4a|caf|mp3|aac|wav)$/i.test(file.name)) {\n            return alert('Please select a valid audio file.');\n          }\n          const stableAnchor = document.getElementById('stableAnchor');\n          anvil.call(stableAnchor, 'process_uploaded_audio', file);\n        };\n\n          window.openModal = (id) => { document.getElementById(id).style.display = 'block'; };\n          window.closeModal = (id) => { document.getElementById(id).style.display = 'none'; };\n\n          window.renderTemplates = (templates) => {\n          const list = document.getElementById('templatesList');\n          if (!list) return;\n          list.innerHTML = '';\n          templates.forEach(t => {\n          const button = document.createElement('button');\n          button.className = 'template-item';\n          button.innerHTML = `<span>${t.name}</span>`;\n          button.addEventListener('click', () => window.selectTemplate(t));\n          list.appendChild(button);\n        });\n        };\n\n          window.selectTemplate = (template, closeModal = true) => {\n          window.selectedTemplate = template;\n          const btn = document.getElementById('templateSelectBtn');\n          if (btn) {\n          btn.dataset.templateId = template.id;\n          btn.dataset.templateName = template.name; \n          const display = btn.querySelector('span:first-child');\n          if(display) display.textContent = template.name;\n        }\n          window.setEditorContent(template.display ? template.html : '');\n          if(closeModal) window.closeModal('templateModal');\n        };\n\n          window.searchPatientsInModal = (term) => {\n          anvil.call(document.getElementById('stableAnchor'), 'search_patients_relay', term)\n          .then(patients => {\n          const list = document.getElementById('patientsList');\n          if(list) {\n          list.innerHTML = '';\n          patients.forEach(p => {\n          const btn = document.createElement('button');\n          btn.className = 'patient-item';\n          btn.textContent = p.name;\n          btn.onclick = () => window.selectPatientForSave(p); // Pass the whole patient object\n          list.appendChild(btn);\n        });\n        }\n        });\n        };\n\n          window.selectPatientForSave = (patientData) => {\n          window.selectedPatient = patientData;\n          window.closeModal('patientModal');\n          window.continueSave();\n        };\n\n          window.openPatientModalForSave = (currentContent) => {\n          window._saveContentData = { \n          content: currentContent, \n          images: []\n        };\n          window.openModal('patientModal');\n          window.rebuildPatientSearchInput();\n          window.searchPatientsInModal('');\n        };\n\n          window.continueSave = () => {\n          const content = window._saveContentData.content;\n          const images = window._saveContentData.images;\n          anvil.call(document.getElementById('stableAnchor'), 'save_report', JSON.stringify({ content }), images, window.selectedPatient)\n          .then(ok => {\n          if (ok) {\n          window.displayBanner(\"Report saved.\", 'success');\n        } else {\n          window.displayBanner(\"Save failed.\", 'error');\n        }\n        });\n        };\n\n          // --------------------------------------------------------------------------------------------\n          // GOLDEN RULE 2: ALWAYS ATTACH EVENT LISTENERS IN A DEDICATED FUNCTION\n          // --------------------------------------------------------------------------------------------\n          window.attachEvents = function() {\n          const reattach = (id, event, handler) => {\n          const el = document.getElementById(id);\n          if(el) {\n          const newEl = el.cloneNode(true);\n          el.parentNode.replaceChild(newEl, el);\n          newEl.addEventListener(event, handler);\n        }\n        };\n\n\n            reattach('recordToggle', 'click', () => window.toggleMode('record'));\n            reattach('uploadToggle', 'click', () => window.toggleMode('upload'));\n\n          const dropZone = document.getElementById('dropZone');\n          if (dropZone) {\n          const newZone = dropZone.cloneNode(true);\n          dropZone.parentNode.replaceChild(newZone, dropZone);\n          newZone.addEventListener('dragover', e => { e.preventDefault(); newZone.classList.add('dragover'); });\n          newZone.addEventListener('dragleave', () => newZone.classList.remove('dragover'));\n          newZone.addEventListener('drop', e => { e.preventDefault(); newZone.classList.remove('dragover'); window.handleFileSelect(e); });\n          newZone.addEventListener('click', e => { if (!e.target.closest('label')) newZone.querySelector('#audioFileInput').click(); });\n          newZone.querySelector('#audioFileInput').addEventListener('change', window.handleFileSelect);\n        }\n\n          reattach('discardAudioBtn', 'click', (e) => {\n          const stableAnchor = document.getElementById('stableAnchor');\n          anvil.call(stableAnchor, 'clear_recording_handler');\n        });\n\n          reattach('processAudioBtn', 'click', (e) => {\n          const stableAnchor = document.getElementById('stableAnchor');\n          anvil.call(stableAnchor, 'prepare_ui_for_processing')\n          .then(() => anvil.call(stableAnchor, 'process_recording'));\n        });\n\n          reattach('templateSelectBtn', 'click', () => window.openModal('templateModal'));\n\n          const langDropdown = document.getElementById('langueDropdown');\n          if(langDropdown) {\n          const newDd = langDropdown.cloneNode(true);\n          langDropdown.parentNode.replaceChild(newDd, langDropdown);\n          newDd.addEventListener('click', e => { if(!e.target.closest('.dropdown-menu')) newDd.querySelector('.dropdown-menu').classList.toggle('active'); });\n          newDd.querySelectorAll('.dropdown-menu div').forEach(item => {\n          item.addEventListener('click', e => {\n          e.stopPropagation();\n          newDd.querySelector('span:first-child').textContent = item.dataset.value;\n          newDd.querySelector('.dropdown-menu').classList.remove('active');\n        });\n        });\n        }\n\n          reattach('closePatientModalBtn', 'click', () => window.closeModal('patientModal'));\n          reattach('newPatientBtn', 'click', () => {\n          anvil.call(document.getElementById('stableAnchor'), 'get_new_patient_details').then(details => {\n          if (details) {\n          const patientData = {\n          unique_id: null,\n          name: details.name,\n          details: {\n          type: details.type,\n          proprietaire: details.proprietaire\n        }\n        };\n          window.selectPatientForSave(patientData);\n        }\n        });\n        });\n          reattach('closeTemplateModalBtn', 'click', () => window.closeModal('templateModal'));\n          reattach('templateSearchInput', 'input', e => anvil.call(document.getElementById('stableAnchor'), 'search_template_relay', e.target.value).then(window.renderTemplates));\n\n          window.setAudioWorkflowState('input');\n        };\n        }\n\n          // --------------------------------------------------------------------------------------------\n          // GOLDEN RULE 3: IMMEDIATELY ATTACH EVERYTHING\n          // --------------------------------------------------------------------------------------------\n          window.attachEvents();\n          </script>\n  </body>\n</html>"
    visible: true
  type: HtmlTemplate
is_package: true
