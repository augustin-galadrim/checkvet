components:
- data_bindings:
  - {code: '', property: item, writeback: false}
  event_bindings: {}
  layout_properties: {slot: recorder_slot}
  name: recording_widget
  properties: {}
  type: form:Components.RecordingWidget
- layout_properties: {slot: time_display_slot}
  name: time_display_1
  properties: {}
  type: form:Components.TimeDisplay
- event_bindings: {x_save_clicked: report_footer_1_save_clicked, x_status_clicked: report_footer_1_status_clicked}
  layout_properties: {slot: bottom_buttons_slot}
  name: report_footer_1
  properties: {}
  type: form:Components.ReportFooter
- event_bindings: {}
  layout_properties: {slot: playback_slot}
  name: audio_playback_1
  properties: {}
  type: form:Components.AudioPlayback
- layout_properties: {slot: editor_slot}
  name: text_editor_1
  properties: {show_undo_redo_buttons: true}
  type: form:Components.TextEditor
- layout_properties: {slot: default}
  name: header_nav_1
  properties: {active_tab: Production}
  type: form:Components.HeaderNav
- layout_properties: {slot: feedback_slot}
  name: user_feedback_1
  properties: {}
  type: form:Components.UserFeedback
- event_bindings: {x_import_item: queue_manager_1_x_import_item}
  layout_properties: {slot: queue}
  name: queue_manager_1
  properties: {disable_import: false}
  type: form:Components.QueueManager
container:
  properties:
    html: "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\n    <title>Audio Management Interface</title>\n    <style>\n      :root { --footer-height: 100px; }\n      * { box-sizing: border-box; font-family: Arial, sans-serif; margin: 0; padding: 0; }\n      body { background-color: #f5f5f5; height: 100vh; overflow: hidden; }\n      .actions-row { display: flex; align-items: center; padding: 15px 20px; }\n      .actions-row > [anvil-slot=\"time_display_slot\"] { margin-left: auto; }\n      .scrollable-content { flex: 1; overflow-y: auto;  padding: 20px 20px var(--footer-height) 20px; }\n      .audio-section { padding: 5px 0; width: 100%; }\n      .recording-controls { padding: 20px 0; }\n      #audioInputContainer, #audioDecisionContainer, #audioProcessingContainer { width: 100%; display: none; }\n      #audioDecisionContainer { display: flex; flex-direction: column; align-items: center; gap: 15px; }\n      .slide-toggle-container { display: flex; position: relative; width: 320px; margin: 10px auto; background-color: #f0f0f0; border-radius: 25px; padding: 5px; border: 1px solid #ddd; }\n      .toggle-option { flex: 1; text-align: center; padding: 10px 0; cursor: pointer; color: #555; font-weight: 500; z-index: 2; transition: color 0.3s ease; user-select: none; }\n      .toggle-option.active { color: #ffffff; }\n      .toggle-slider { position: absolute; top: 5px; left: 5px; height: calc(100% - 10px); width: calc(50% - 5px); background-color: #3974CB; border-radius: 25px; transition: transform 0.3s ease-in-out; box-shadow: 0 2px 4px rgba(0,0,0,0.1); z-index: 1; }\n      .slide-toggle-container.upload-active .toggle-slider { transform: translateX(100%); }\n      .upload-section { max-width: 400px; margin: 0 auto; display: flex; flex-direction: column; align-items: center; }\n      .upload-container { width: 100%; border: 2px dashed #aaa; border-radius: 10px; padding: 20px; text-align: center; background-color: #f8f8f8; transition: all 0.3s ease; cursor: pointer; margin-bottom: 15px; }\n      .upload-container:hover, .upload-container.dragover { border-color: #3974CB; background-color: #BDD2EC; }\n      .upload-icon { font-size: 40px; color: #666; margin-bottom: 10px; }\n      .upload-text { font-size: 16px; margin-bottom: 5px; }\n      .upload-description { color: #666; font-size: 14px; margin-bottom: 15px; }\n      .upload-button { background-color: #3974CB; color: white; border: none; padding: 10px 20px; border-radius: 5px; font-size: 16px; cursor: pointer; }\n      .upload-button:hover { background: #2C5DA4; border-color: #2C5DA4; }\n      #audioFileInput { display: none; }\n      .decision-buttons { display: flex; gap: 15px; margin-top: 10px; }\n      .decision-button { padding: 10px 20px; border-radius: 4px; border: 1px solid #ddd; cursor: pointer; font-size: 14px; font-weight: bold; }\n      .decision-button.process { background-color: #3974CB; color: white; border-color: #3974CB; }\n      .decision-button.discard { background-color: #f44336; color: white; border-color: #f44336; }\n      .parameters-section { background: white; padding: 20px; border-radius: 8px; margin-bottom: 0; }\n      .parameter-row { display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px; }\n      .parameter-row label { font-weight: bold; margin-right: 10px; }\n      .template-select-container .select-button, .dropdown { min-width: 200px; padding: 8px; border: 1px solid #ddd; border-radius: 4px; background: white; cursor: pointer; display: flex; justify-content: space-between; align-items: center; }\n      .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); align-items: center; justify-content: center; }\n      #newPatientEntryModal { z-index: 1001; }\n      .modal-content { position: relative; background-color: white; padding: 20px; width: 90%; max-width: 500px; border-radius: 8px; box-shadow: 0 4px 10px rgba(0,0,0,0.2); }\n      .modal-header { font-size: 18px; font-weight: bold; margin-bottom: 15px; }\n      .modal-footer { display: flex; justify-content: flex-end; gap: 10px; margin-top: 20px; }\n      .search-container { position: relative; margin-bottom: 20px; }\n      .search-icon { position: absolute; left: 12px; top: 50%; transform: translateY(-50%); width: 16px; height: 16px; color: #666; }\n      .search-input { width: 100%; padding: 8px 12px 8px 36px; border: 1px solid #ddd; border-radius: 6px; font-size: 14px; }\n      .new-patient-btn, .patient-item, .template-item { display: block; width: 100%; padding: 8px 12px; background: none; border: none; border-radius: 6px; text-align: left; cursor: pointer; font-size: 14px; }\n      .new-patient-btn {\n        font-weight: bold;\n        color: #3974CB; \n        background-color: #BDD2EC; \n        border: 1px solid #3974CB; \n      }\n      .new-patient-btn:hover {\n        background-color: #ADC1E9;\n      }\n      .patient-item:hover, .template-item:hover { background-color: #f3f4f6; }\n      .patients-list, .templates-list { max-height: 300px; overflow-y: auto; }\n      .close-button { position: absolute; top: 15px; right: 15px; background: none; border: none; cursor: pointer; padding: 5px; color: #666; }\n      .divider { height: 1px; background-color: #ddd; margin: 15px 0; }\n      #modification-instructions {\n        background: #f8f8f8;\n        border: 1px solid #ddd;\n        padding: 15px;\n        margin-bottom: 20px;\n        margin-top: 10px;\n        margin-left: auto;\n        margin-right: auto;\n        border-radius: 8px;\n        box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n        text-align: center;\n        max-width: 90%;\n      }\n      .edit-instructions {\n        font-size: 14px;\n        color: #555;\n        margin-bottom: 10px;\n      }\n      .edit-instructions em {\n        color: #333;\n        background-color: #e9e9e9;\n        padding: 2px 5px;\n        border-radius: 3px;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"responsive-container\">\n      <div class=\"fixed-section\">\n        <div anvil-slot=\"default\"></div>\n        <div class=\"actions-row\">\n          <div anvil-slot=\"queue\"></div>\n          <div anvil-slot=\"time_display_slot\"></div>\n        </div>\n      </div>\n      <div class=\"scrollable-content\">\n        <div class=\"parameters-section\">\n          <div class=\"parameter-row\">\n            <label id=\"audioManager-label-template\">Template</label>\n            <div class=\"template-select-container\">\n              <button class=\"select-button\" id=\"templateSelectBtn\"><span id=\"audioManager-span-templatePlaceholder\">Select a template</span><span>▼</span></button>\n            </div>\n          </div>\n        </div>\n        <div class=\"audio-section\">\n          <div id=\"audioInputContainer\">\n            <div id=\"modification-instructions\" style=\"display: none;\">\n              <div class=\"edit-instructions\">\n                <p id=\"audioManager-p-instructions\"></p>\n                <p>\n                  <strong id=\"audioManager-strong-example\"></strong>\n                  <em id=\"audioManager-em-exampleText\"></em>\n                </p>\n              </div>\n            </div>\n            <div class=\"slide-toggle-container\">\n              <div class=\"toggle-option active\" id=\"audioManager-div-recordToggle\">Record</div>\n              <div class=\"toggle-option\" id=\"audioManager-div-uploadToggle\">Upload</div>\n              <div class=\"toggle-slider\"></div>\n            </div>\n            <div class=\"recording-controls\" id=\"recordingMode\"><div anvil-slot=\"recorder_slot\"></div></div>\n            <div class=\"upload-section\" id=\"uploadMode\" style=\"display: none;\">\n              <div class=\"upload-container\" id=\"dropZone\">\n                <div class=\"upload-icon\">📋</div>\n                <div class=\"upload-text\" id=\"audioManager-div-uploadText\">Drop your voice memo here</div>\n                <div class=\"upload-description\" id=\"audioManager-p-uploadDesc\">or click to select a file</div>\n                <input type=\"file\" id=\"audioFileInput\" accept=\"audio/*,.m4a,.caf\">\n                <label for=\"audioFileInput\" class=\"upload-button\" id=\"audioManager-label-uploadButton\">Select file</label>\n              </div>\n            </div>\n          </div>\n          <div id=\"audioDecisionContainer\">\n            <div anvil-slot=\"playback_slot\"></div>\n            <div class=\"decision-buttons\">\n              <button id=\"audioManager-button-discard\" class=\"decision-button discard\">Discard Audio</button>\n              <button id=\"audioManager-button-process\" class=\"decision-button process\">Process Audio</button>\n              <button id=\"audioManager-button-modify\" class=\"decision-button process\" style=\"display: none;\">Process Modification</button>\n            </div>\n          </div>\n          <div id=\"audioProcessingContainer\"><div anvil-slot=\"feedback_slot\"></div></div>\n        </div>\n        <div anvil-slot=\"editor_slot\"></div>\n        <div id=\"stableAnchor\" style=\"display:none;\"></div>\n      </div>\n      <div anvil-slot=\"bottom_buttons_slot\"></div>\n    </div>\n\n    <!-- Modals -->\n    <div class=\"modal\" id=\"newPatientEntryModal\" style=\"display: none;\">\n      <div class=\"modal-content\">\n        <button class=\"close-button\" id=\"closeNewPatientModalBtn\">✕</button>\n        <div class=\"modal-header\"><h3 class=\"modal-title\" id=\"audioManager-h3-newPatientTitle\">Create New Patient</h3></div>\n        <div class=\"form-group\"><label for=\"new-patient-name\" id=\"audioManager-label-newPatientName\">Name</label><input type=\"text\" id=\"new-patient-name\" class=\"search-input\" placeholder=\"e.g., Fido\"></div>\n        <div class=\"form-group\"><label for=\"new-patient-type\" id=\"audioManager-label-newPatientSpecies\">Species</label><input type=\"text\" id=\"new-patient-type\" class=\"search-input\" placeholder=\"e.g., Canine\"></div>\n        <div class=\"form-group\"><label for=\"new-patient-owner\" id=\"audioManager-label-newPatientOwner\">Owner</label><input type=\"text\" id=\"new-patient-owner\" class=\"search-input\" placeholder=\"e.g., Jane Doe\"></div>\n        <div class=\"modal-footer\"><button class=\"button\" id=\"audioManager-button-newPatientCancel\">Cancel</button><button class=\"button button-primary\" id=\"audioManager-button-newPatientSave\">Create and Select</button></div>\n      </div>\n    </div>\n    <div class=\"patient-select-container\">\n      <div class=\"modal\" id=\"patientModal\">\n        <div class=\"modal-content\">\n          <button class=\"close-button\" id=\"closePatientModalBtn\">✕</button>\n          <div class=\"modal-header\"><h3 class=\"modal-title\" id=\"audioManager-h3-selectPatientTitle\">Select a patient</h3>\n            <div class=\"search-container\"><svg class=\"search-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg>\n              <input type=\"text\" class=\"search-input\" placeholder=\"Search for a patient...\" id=\"audioManager-input-patientSearch\">\n            </div>\n          </div>\n          <div class=\"patients-list\" id=\"patientsList\"></div>\n        </div>\n      </div>\n    </div>\n    <div class=\"template-select-container\">\n      <div class=\"modal\" id=\"templateModal\">\n        <div class=\"modal-content\">\n          <button class=\"close-button\" id=\"closeTemplateModalBtn\">✕</button>\n          <div class=\"modal-header\"><h3 class=\"modal-title\" id=\"audioManager-h3-selectTemplateTitle\">Select a template</h3>\n            <div class=\"search-container\"><svg class=\"search-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><circle cx=\"11\" cy=\"11\" r=\"8\"></circle><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line></svg><input type=\"text\" class=\"search-input\" placeholder=\"Search for a template...\" id=\"audioManager-input-templateSearch\"></div>\n          </div>\n          <div class=\"templates-list\" id=\"templatesList\"></div>\n        </div>\n      </div>\n    </div>\n\n    <script>\n      if (!window.__my_audio_manager_globals) {\n        window.__my_audio_manager_globals = true;\n        const logger = window.createLogger('AudioManagerForm');\n        let allPatientsData = [];\n        let currentFormMode = 'initial_generation';\n        let localeTexts = {};\n\n        window.setLocaleTexts = function(texts) {\n          logger.log('Setting locale texts from Python.');\n          localeTexts = { ...localeTexts, ...texts };\n        };\n\n        window.isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);\n\n        window.populatePatientModal = (patients) => allPatientsData = patients || [];\n\n        window.populateTemplateModal = (templates) => {\n          window.templatesData = templates.sort((a, b) => a.name.localeCompare(b.name));\n          renderTemplates(window.templatesData);\n        };\n\n        window.setFormMode = (mode) => {\n          logger.log(`Setting form mode to: '${mode}'.`);\n          currentFormMode = mode;\n          const isModification = mode === 'modification';\n          document.getElementById('modification-instructions').style.display = isModification ? 'block' : 'none';\n          document.querySelector('.slide-toggle-container').style.display = isModification ? 'none' : 'flex';\n          if (isModification) window.toggleMode('record');\n        };\n\n        window.toggleMode = (mode) => {\n          const isRecord = mode === 'record';\n          document.getElementById('recordingMode').style.display = isRecord ? 'block' : 'none';\n          document.getElementById('uploadMode').style.display = isRecord ? 'none' : 'block';\n          document.querySelector('.slide-toggle-container').classList.toggle('upload-active', !isRecord);\n          document.getElementById('audioManager-div-recordToggle').classList.toggle('active', isRecord);\n          document.getElementById('audioManager-div-uploadToggle').classList.toggle('active', !isRecord);\n        };\n\n        window.setAudioWorkflowState = (state) => {\n          const containers = { input: document.getElementById('audioInputContainer'), decision: document.getElementById('audioDecisionContainer'), processing: document.getElementById('audioProcessingContainer') };\n          Object.values(containers).forEach(c => c.style.display = 'none');\n          if (state === 'decision') {\n            containers.decision.style.display = 'flex';\n            const isMod = currentFormMode === 'modification';\n            document.getElementById('audioManager-button-process').style.display = isMod ? 'none' : 'block';\n            document.getElementById('audioManager-button-modify').style.display = isMod ? 'block' : 'none';\n          } else if (containers[state]) {\n            containers[state].style.display = 'block';\n          }\n        };\n\n        window.handleFileSelect = (event) => {\n          const file = event.dataTransfer ? event.dataTransfer.files[0] : event.target.files[0];\n          if (!file) return;\n          if (!file.type.startsWith('audio/') && !/\\.(m4a|caf|mp3|aac|wav)$/i.test(file.name)) {\n            return alert(localeTexts.invalidFile);\n          }\n          anvil.call(document.getElementById('stableAnchor'), 'process_uploaded_audio', file, file.type);\n        };\n\n        window.renderTemplates = (templates) => {\n          const list = document.getElementById('templatesList');\n          if (!list) return;\n          list.innerHTML = '';\n          const langToFlag = { 'en': '🇬🇧', 'fr': '🇫🇷' };\n          templates.forEach(t => {\n            const btn = document.createElement('button');\n            btn.className = 'template-item';\n            const flag = langToFlag[t.language || 'en'] || '🏳️';\n            btn.innerHTML = `<span>${t.name} - ${flag}</span>`;\n            btn.addEventListener('click', () => window.selectTemplate(t));\n            list.appendChild(btn);\n          });\n        };\n\n        window.selectTemplate = (template, closeModalAfter = true) => {\n          const btn = document.getElementById('templateSelectBtn')?.querySelector('span:first-child');\n          if (btn) {\n            const flag = { 'en': '🇬🇧', 'fr': '🇫🇷' }[template.language || 'en'] || '🏳️';\n            btn.textContent = `${template.name} - ${flag}`;\n          }\n          anvil.call(document.getElementById('stableAnchor'), 'load_template_content', template.html);\n          anvil.call(document.getElementById('stableAnchor'), 'set_active_template_language', template.language);\n          anvil.call(document.getElementById('stableAnchor'), 'set_selected_template', template);\n          if (closeModalAfter) closeModal('templateModal');\n        };\n\n        window.renderPatients = (patients) => {\n          const list = document.getElementById('patientsList');\n          if (!list) return;\n          list.innerHTML = '';\n          patients.forEach(p => {\n            const btn = document.createElement('button');\n            btn.className = 'patient-item';\n            btn.textContent = p.name;\n            btn.onclick = () => window.selectPatientForSave(p);\n            list.appendChild(btn);\n          });\n          list.insertAdjacentHTML('beforeend', `<div class=\"divider\"></div><button class=\"new-patient-btn\" id=\"audioManager-button-newPatient\">${localeTexts.newPatientBtn}</button>`);\n          list.querySelector('#audioManager-button-newPatient').addEventListener('click', () => {\n            closeModal('patientModal');\n            ['new-patient-name', 'new-patient-type', 'new-patient-owner'].forEach(id => document.getElementById(id).value = '');\n            openModal('newPatientEntryModal');\n          });\n        };\n\n        window.selectPatientForSave = (patientData) => {\n          window.selectedPatient = patientData;\n          closeModal('patientModal');\n          window.continueSave();\n        };\n\n        window.openPatientModalForSave = () => {\n          window.openModal('patientModal');\n          window.renderPatients(allPatientsData);\n          document.getElementById('audioManager-input-patientSearch')?.focus();\n        };\n\n        window.continueSave = () => {\n          anvil.call(document.getElementById('stableAnchor'), 'save_report', window.selectedPatient);\n        };\n        window.addPatientToLocalList = function(newPatient) {\n          if (newPatient && newPatient.id && newPatient.name) {\n            allPatientsData.push(newPatient);\n            allPatientsData.sort((a, b) => a.name.localeCompare(b.name));\n            logger.log(`Nouveau patient '${newPatient.name}' ajouté à la liste locale.`);\n          } else {\n            logger.warn('addPatientToLocalList a été appelé avec un objet patient invalide.', newPatient);\n          }\n        };\n\n\n        window.attachEvents = function() {\n          logger.log(\"Attaching all event listeners.\");\n          const reattach = (id, event, handler) => {\n            const el = document.getElementById(id);\n            if(el) {\n              const newEl = el.cloneNode(true);\n              el.parentNode.replaceChild(newEl, el);\n              newEl.addEventListener(event, handler);\n            }\n          };\n          const stableAnchor = document.getElementById('stableAnchor');\n          reattach('audioManager-div-recordToggle', 'click', () => window.toggleMode('record'));\n          reattach('audioManager-div-uploadToggle', 'click', () => window.toggleMode('upload'));\n          const dropZone = document.getElementById('dropZone');\n          if (dropZone) {\n            const newZone = dropZone.cloneNode(true);\n            dropZone.parentNode.replaceChild(newZone, dropZone);\n            newZone.addEventListener('dragover', e => { e.preventDefault(); newZone.classList.add('dragover'); });\n            newZone.addEventListener('dragleave', () => newZone.classList.remove('dragover'));\n            newZone.addEventListener('drop', e => { e.preventDefault(); newZone.classList.remove('dragover'); window.handleFileSelect(e); });\n            newZone.addEventListener('click', e => { if (!e.target.closest('label')) newZone.querySelector('#audioFileInput').click(); });\n            newZone.querySelector('#audioFileInput').addEventListener('change', window.handleFileSelect);\n          }\n          reattach('audioManager-button-discard', 'click', () => anvil.call(stableAnchor, 'clear_recording_handler'));\n          reattach('audioManager-button-process', 'click', () => anvil.call(stableAnchor, 'process_recording'));\n          reattach('audioManager-button-modify', 'click', () => anvil.call(stableAnchor, 'process_modification'));\n          reattach('templateSelectBtn', 'click', () => openModal('templateModal'));\n          reattach('closeTemplateModalBtn', 'click', () => closeModal('templateModal'));\n          reattach('audioManager-input-templateSearch', 'input', e => anvil.call(stableAnchor, 'search_template_relay', e.target.value).then(window.renderTemplates));\n          reattach('closePatientModalBtn', 'click', () => closeModal('patientModal'));\n          reattach('audioManager-input-patientSearch', 'input', (e) => window.renderPatients(allPatientsData.filter(p => p.name.toLowerCase().includes(e.target.value.toLowerCase()))));\n          reattach('closeNewPatientModalBtn', 'click', () => { closeModal('newPatientEntryModal'); openModal('patientModal'); });\n          reattach('audioManager-button-newPatientCancel', 'click', () => { closeModal('newPatientEntryModal'); openModal('patientModal'); });\n          reattach('audioManager-button-newPatientSave', 'click', () => {\n            const newDetails = { name: document.getElementById('new-patient-name').value.trim(), type: document.getElementById('new-patient-type').value.trim(), proprietaire: document.getElementById('new-patient-owner').value.trim() };\n            if (!newDetails.name) return alert(localeTexts.patientNameRequired);\n            closeModal('newPatientEntryModal');\n            window.selectPatientForSave({ id: null, name: newDetails.name, details: newDetails });\n          });\n          window.setAudioWorkflowState('input');\n        };\n      }\n      attachEvents();\n    </script>\n  </body>\n</html>"
    visible: true
  type: HtmlTemplate
is_package: true
