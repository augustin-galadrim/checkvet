components: []
container:
  properties:
    html: |-
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>Registration</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 0; background-color: #f5f5f5; }
            .container { position: relative; width: 100%; height: 100vh; display: flex; align-items: center; justify-content: center; }
            .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4); align-items: center; justify-content: center; }
            .modal.active { display: flex; }
            .modal-content { background: white; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.2); width: 90%; max-width: 400px; }
            .modal h2 { margin-top: 0; margin-bottom: 10px; font-size: 22px; color: #333; }
            .modal p { margin-bottom: 20px; color: #666; font-size: 15px; }
            .form-group { margin-bottom: 15px; }
            .form-group label { display: block; margin-bottom: 5px; font-weight: 500; }
            .form-group input[type="text"], .form-group input[type="tel"], .form-group input[type="email"] { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px; font-size: 14px; }
            .radio-group label { display: block; padding: 12px; border: 1px solid #ddd; border-radius: 4px; margin-bottom: 10px; cursor: pointer; transition: all 0.2s ease; }
            .radio-group label:hover { border-color: #4CAF50; }
            .radio-group input[type="radio"] { margin-right: 10px; }
            .radio-group input[type="radio"]:checked + span { font-weight: bold; }
            #join-code-group { display: none; margin-top: 15px; }
            #join-code-group label { font-size: 14px; color: #333; }
            .button-group { display: flex; gap: 10px; margin-top: 25px; justify-content: flex-end; }
            .custom-button { padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; transition: background-color 0.3s; }
            .btn-primary { background-color: #4CAF50; color: white; }
            .btn-primary:hover { background-color: #45a049; }
            .btn-default { background-color: #f0f0f0; color: #333; border: 1px solid #ddd; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="modal" id="modal-step1">
              <div class="modal-content">
                <h2 id="regFlow-h2-langTitle">Choose Your Language</h2>
                <p id="regFlow-p-langDesc">Please select your preferred language for the application.</p>
                <div class="radio-group" id="language-group">
                  <label><input type="radio" name="language" value="fr"> <span id="regFlow-span-langFr">Français</span></label>
                  <label><input type="radio" name="language" value="en"> <span id="regFlow-span-langEn">English</span></label>
                  <label><input type="radio" name="language" value="es"> <span id="regFlow-span-langEs">Español</span></label>
                  <label><input type="radio" name="language" value="de"> <span id="regFlow-span-langDe">Deutsch</span></label>
                  <label><input type="radio" name="language" value="nl"> <span id="regFlow-span-langNl">Nederlands</span></label>
                </div>
                <div class="button-group">
                  <button id="regFlow-button-langNext" class="custom-button btn-primary">Next</button>
                </div>
              </div>
            </div>

            <div class="modal" id="modal-step2">
              <div class="modal-content">
                <h2 id="regFlow-h2-infoTitle">Your Information</h2>
                <p id="regFlow-p-infoDesc">Please enter your name and phone number to continue.</p>
                <div class="form-group">
                  <label for="reg-name" id="regFlow-label-name">Name</label>
                  <input type="text" id="reg-name" required>
                </div>
                <div class="form-group">
                  <label for="reg-phone" id="regFlow-label-phone">Phone</label>
                  <input type="tel" id="reg-phone" required>
                </div>
                <div class="button-group">
                  <button id="regFlow-button-infoBack" class="custom-button btn-default">Back</button>
                  <button id="regFlow-button-infoNext" class="custom-button btn-primary">Next</button>
                </div>
              </div>
            </div>

            <div class="modal" id="modal-step3">
              <div class="modal-content">
                <h2 id="regFlow-h2-structTitle">Set Up Your Practice</h2>
                <p id="regFlow-p-structDesc">How would you like to configure your account?</p>
                <div class="radio-group" id="structure-choice-group">
                  <label><input type="radio" name="structure-choice" value="independent" checked> <span id="regFlow-span-structIndep">Register as Independent</span></label>
                  <label><input type="radio" name="structure-choice" value="join"> <span id="regFlow-span-structJoin">Join an Existing Structure</span></label>
                  <label><input type="radio" name="structure-choice" value="create"> <span id="regFlow-span-structCreate">Create a New Structure</span></label>
                </div>
                <div class="form-group" id="join-code-group">
                  <label for="join-code-input" id="regFlow-label-joinCode">Structure Join Code</label>
                  <input type="text" id="join-code-input" placeholder="Enter the 6-digit code">
                </div>
                <div class="button-group">
                  <button id="regFlow-button-structBack" class="custom-button btn-default">Back</button>
                  <button id="regFlow-button-structFinish" class="custom-button btn-primary">Finish Registration</button>
                </div>
              </div>
            </div>

            <div class="modal" id="modal-step4">
              <div class="modal-content">
                <h2 id="regFlow-h2-createTitle">Create Your New Structure</h2>
                <p id="regFlow-p-createDesc">Please enter the details for your new practice.</p>
                <div class="form-group">
                  <label for="reg-structure-name" id="regFlow-label-structName">Structure Name</label>
                  <input type="text" id="reg-structure-name" required>
                </div>
                <div class="form-group">
                  <label for="reg-structure-phone" id="regFlow-label-structPhone">Structure Phone</label>
                  <input type="tel" id="reg-structure-phone">
                </div>
                <div class="form-group">
                  <label for="reg-structure-email" id="regFlow-label-structEmail">Structure Email</label>
                  <input type="email" id="reg-structure-email">
                </div>
                <div class="button-group">
                  <button id="regFlow-button-createBack" class="custom-button btn-default">Back</button>
                  <button id="regFlow-button-createFinish" class="custom-button btn-primary">Finish Registration</button>
                </div>
              </div>
            </div>
          </div>

          <script>
            if (!window.__reg_flow_globals) {
              window.__reg_flow_globals = true;

              const logger = window.createLogger('RegistrationFlow');

              window.getBrowserLanguage = function() {
                const lang = navigator.language || navigator.userLanguage;
                logger.log(`Browser language detected: ${lang}`);
                if (lang && lang.toLowerCase().startsWith('fr')) {
                  return 'fr';
                }
                return 'en';
              };

              // ** THE FIX: New JS function to be called from Python **
              window.selectLanguageRadio = function(langCode) {
                logger.log(`Programmatically selecting language radio: ${langCode}`);
                const radioButton = document.querySelector(`input[name='language'][value='${langCode}']`);
                if (radioButton) {
                  radioButton.checked = true;
                } else {
                  logger.warn(`Could not find a radio button for language code: ${langCode}`);
                }
              };

              window.getValueById = (id) => document.getElementById(id)?.value || "";
              window.getRadioValueByName = (name) => document.querySelector(`input[name="${name}"]:checked`)?.value || "";

              window.attachRegistrationEvents = function() {
                logger.log('Attaching registration event listeners.');
                const form = document.querySelector('.container');

                const reattach = (id, event, handler) => {
                  const element = document.getElementById(id);
                  if(element) {
                    const newElement = element.cloneNode(true);
                    element.parentNode.replaceChild(newElement, element);
                    newElement.addEventListener(event, handler);
                  }
                };

                reattach('regFlow-button-langNext', 'click', (e) => anvil.call(form, 'go_to_step', 1, 2));
                reattach('regFlow-button-infoBack', 'click', (e) => anvil.call(form, 'go_to_step', 2, 1));
                reattach('regFlow-button-infoNext', 'click', (e) => anvil.call(form, 'go_to_step', 2, 3));
                reattach('regFlow-button-structBack', 'click', (e) => anvil.call(form, 'go_to_step', 3, 2));
                reattach('regFlow-button-structFinish', 'click', (e) => anvil.call(form, 'submit_registration'));
                reattach('regFlow-button-createBack', 'click', (e) => anvil.call(form, 'go_to_step', 4, 3));
                reattach('regFlow-button-createFinish', 'click', (e) => anvil.call(form, 'finish_registration_with_structure'));

                const structureChoiceRadios = document.querySelectorAll('input[name="structure-choice"]');
                structureChoiceRadios.forEach(radio => {
                  radio.addEventListener('change', (e) => {
                    const joinGroup = document.getElementById('join-code-group');
                    joinGroup.style.display = (e.target.value === 'join') ? 'block' : 'none';
                    anvil.call(form, 'update_step3_button_text');
                  });
                });
              };
            }
          </script>
        </body>
      </html>
  type: HtmlTemplate
is_package: true
