components:
- layout_properties: {slot: time_display_slot}
  name: time_display_1
  properties: {}
  type: form:Components.TimeDisplay
- layout_properties: {slot: default}
  name: header_nav_1
  properties: {active_tab: Settings}
  type: form:Components.HeaderNav
container:
  properties:
    html: |-
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <style>
            * { box-sizing: border-box; font-family: Arial, sans-serif; margin: 0; padding: 0; }
            body { background-color: #f5f5f5; height: 100vh; overflow: hidden; }
            .fixed-section { background: white; z-index: 10; }
            .actions-row { display: flex; justify-content: flex-end; align-items: center; padding: 15px 20px; }
            .scrollable-content { flex: 1; overflow-y: auto; padding: 20px; }
            .settings-form { background-color: white; border-radius: 8px; }
            .settings-section { background-color: #f9f9f9; border: 1px solid #e0e0e0; border-radius: 8px; padding: 20px; margin-bottom: 25px; }
            .section-title { font-size: 18px; font-weight: 600; color: #333; margin-top: 0; margin-bottom: 20px; border-bottom: 1px solid #e0e0e0; padding-bottom: 10px; }
            .form-row { display: flex; flex-wrap: wrap; gap: 20px; }
            .form-group { flex: 1 1 100%; margin-bottom: 15px; }
            .form-group.half-width { flex: 1 1 calc(50% - 10px); min-width: 250px; }
            .form-group label { display: block; margin-bottom: 8px; font-weight: 500; color: #333; }
            .form-group input[type="text"], .form-group input[type="email"], .form-group input[type="tel"] { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px; font-size: 14px; }
            .form-group input[readonly] { background-color: #f0f0f0; cursor: not-allowed; }
            .structure-field-container { display: flex; align-items: center; gap: 10px; }
            #settings-button-joinStructure { padding: 8px 16px; background-color: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 14px; white-space: nowrap; }
            .button-group { display: flex; gap: 10px; margin-top: 20px; justify-content: flex-end; }
            .custom-button { padding: 12px 24px; border: none; border-radius: 4px; cursor: pointer; font-size: 14px; text-align: center; transition: background-color 0.3s; }
            #settings-button-submit { background-color: #4CAF50; color: white; }
            #settings-button-cancel { background-color: #aaa; color: white; }
            .custom-structure-button { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px; font-size: 14px; background-color: #fff; cursor: pointer; text-align: left; }
            .modal { display: none; position: fixed; z-index: 20; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); }
            .modal-content { background-color: #fefefe; margin: 10% auto; padding: 20px; border: 1px solid #888; width: 80%; max-width: 400px; border-radius: 8px; }
            .modal-close { color: #aaa; float: right; font-size: 28px; font-weight: bold; cursor: pointer; }
            .structure-option { padding: 10px; border: 1px solid #ddd; border-radius: 4px; margin: 5px 0; cursor: pointer; background-color: #fff; }
            .structure-option.selected { background-color: #d0ebff; border-color: #66b0ff; }
            #settings-input-joinCode.error { border-color: #f44336; }
            #join-code-error { color: #f44336; font-size: 12px; margin-top: 5px; display: none; }
            .logout-footer { padding: 20px; border-top: 1px solid #ddd; background-color: #f8f8f8; text-align: center; margin-top: 20px; }
            #settings-button-logout, #settings-button-admin { background-color: #f44336; color: white; border: none; border-radius: 4px; padding: 12px 24px; cursor: pointer; font-size: 14px; width: 100%; }
            #settings-button-admin { background-color: #007bff; margin-bottom: 10px; display: none; font-weight: bold; border: 2px solid #0056b3; }
          </style>
        </head>
        <body>
          <div class="responsive-container" id="settings-container">
            <div class="fixed-section">
              <div anvil-slot="default"></div>
              <div class="actions-row">
                <div anvil-slot="time_display_slot"></div>
              </div>
            </div>
            <div class="scrollable-content">
              <div class="settings-form">
                <form id="vet-settings-form" onsubmit="return false;">
                  <div class="settings-section">
                    <h2 class="section-title" id="settings-h2-vetInfoTitle">Vet Information</h2>
                    <div class="form-row">
                      <div class="form-group half-width">
                        <label for="settings-input-name" id="settings-label-name">Name</label>
                        <input type="text" id="settings-input-name" required>
                      </div>
                      <div class="form-group half-width">
                        <label for="settings-input-phone" id="settings-label-phone">Phone</label>
                        <input type="tel" id="settings-input-phone">
                      </div>
                    </div>
                    <div class="form-group">
                      <label for="settings-input-email" id="settings-label-email">Email</label>
                      <input type="email" id="settings-input-email" readonly>
                    </div>
                  </div>

                  <div class="settings-section">
                    <h2 class="section-title" id="settings-h2-orgTitle">Organization</h2>
                    <div class="form-group">
                      <label for="settings-input-structureDisplay" id="settings-label-structure">Structure</label>
                      <div class="structure-field-container">
                        <input type="text" id="settings-input-structureDisplay" readonly>
                        <button type="button" id="settings-button-joinStructure" style="display: none;">Join</button>
                      </div>
                    </div>
                    <div id="supervisor-message" style="display: none; font-style: italic; color: #333; margin-top: 10px; padding: 10px; background-color: #e9f5ff; border-left: 4px solid #007bff; border-radius: 4px;">
                      <span id="settings-span-supervisorMessage">You have the <strong>Supervisor</strong> role in your structure.</span>
                    </div>
                    <div class="form-group" id="join-code-container" style="display: none; margin-top: 15px;">
                      <label for="settings-input-joinCode" id="settings-label-joinCode">Structure Join Code</label>
                      <input type="text" id="settings-input-joinCode" readonly>
                    </div>
                  </div>

                  <div class="settings-section">
                    <h2 class="section-title" id="settings-h2-prefsTitle">Preferences</h2>
                    <div class="form-group">
                      <label for="settings-button-favLanguage" id="settings-label-favLanguage">Favorite Language</label>
                      <input type="hidden" id="favorite-language" name="favorite_language_input">
                      <button type="button" id="settings-button-favLanguage" class="custom-structure-button">English</button>
                    </div>
                  </div>

                  <div class="settings-section">
                    <h2 class="section-title" id="settings-h2-toolsTitle">Tools</h2>
                    <button type="button" id="settings-button-micTest" class="custom-structure-button">Test My Microphone</button>
                    <button type="button" id="settings-button-installGuide" class="custom-structure-button" style="margin-top: 10px;">Show App Install Guide</button>
                  </div>

                  <div class="button-group">
                    <button type="button" id="settings-button-cancel" class="custom-button">Cancel</button>
                    <button type="button" id="settings-button-submit" class="custom-button">Update Settings</button>
                  </div>
                </form>
              </div>
              <div class="logout-footer">
                <button id="settings-button-admin" class="custom-button">Administration</button>
                <button id="settings-button-logout" class="custom-button">Logout</button>
              </div>
            </div>
          </div>

          <div id="join-structure-modal" class="modal">
            <div class="modal-content">
              <span id="join-modal-close" class="modal-close">×</span>
              <h3 id="settings-h3-joinModalTitle">Join a Structure</h3>
              <p id="settings-p-joinModalDesc">Enter the 6-digit join code provided by your structure's supervisor.</p>
              <div class="form-group">
                <label for="settings-input-joinCodeModal" id="settings-label-joinCodeModal">Join Code</label>
                <input type="text" id="settings-input-joinCodeModal" maxlength="6">
                <div id="join-code-error">This code doesn't exist.</div>
              </div>
              <div class="button-group">
                <button id="settings-button-submitJoinCode" class="custom-button" style="background-color: #007bff; color: white;">Join Structure</button>
              </div>
            </div>
          </div>

          <div id="favorite-language-modal" class="modal">
            <div class="modal-content">
              <span id="favorite-language-modal-close" class="modal-close">×</span>
              <h3 id="settings-h3-favLangModalTitle">Select Favorite Language</h3>
              <div id="favorite-language-options"></div>
            </div>
          </div>

          <script>
            if (!window.__my_vet_settings_globals) {
              window.__my_vet_settings_globals = true;

              const logger = window.createLogger('SettingsForm');

              window.showAdminButton = function(isAdmin) {
                const adminBtn = document.getElementById("settings-button-admin");
                if (adminBtn) adminBtn.style.display = isAdmin ? "block" : "none";
              };

              window.updateSupervisorView = function(isSupervisor, joinCode) {
                const supervisorMessage = document.getElementById("supervisor-message");
                const joinCodeContainer = document.getElementById("join-code-container");
                const joinCodeInput = document.getElementById("settings-input-joinCode");

                if (supervisorMessage) supervisorMessage.style.display = isSupervisor ? 'block' : 'none';
                if (joinCodeContainer && joinCodeInput) {
                  if (isSupervisor && joinCode) {
                    joinCodeContainer.style.display = 'block';
                    joinCodeInput.value = joinCode;
                  } else {
                    joinCodeContainer.style.display = 'none';
                    joinCodeInput.value = '';
                  }
                }
              };

              window.toggleJoinButton = function(show) {
                const joinButton = document.getElementById("settings-button-joinStructure");
                if(joinButton) joinButton.style.display = show ? 'inline-block' : 'none';
              };

              window.populateFavoriteLanguageModal = function(options, current) {
                const optionsContainer = document.getElementById("favorite-language-options");
                if (!optionsContainer) {
                  logger.warn("Impossible de trouver le conteneur 'favorite-language-options'. Le DOM a peut-être été retiré.");
                  return;
                }
                optionsContainer.innerHTML = "";
                options.forEach(opt => {
                  const optionElem = document.createElement("div");
                  optionElem.classList.add("structure-option");
                  optionElem.textContent = opt.display;
                  if (current && opt.value === current) optionElem.classList.add("selected");
                  optionElem.addEventListener("click", function(event) {
                    document.getElementById("favorite-language").value = opt.value;
                    window.setElementText("settings-button-favLanguage", opt.display);
                    window.closeModal('favorite-language-modal');
                  });
                  optionsContainer.appendChild(optionElem);
                });
              };


              window.showJoinCodeError = function(message) {
                const errorDiv = document.getElementById('join-code-error');
                const input = document.getElementById('settings-input-joinCodeModal');
                if(errorDiv) {
                  errorDiv.textContent = message || "This code doesn't exist.";
                  errorDiv.style.display = 'block';
                }
                if(input) input.classList.add('error');
              };
              window.hideJoinCodeError = function() {
                document.getElementById('join-code-error').style.display = 'none';
                document.getElementById('settings-input-joinCodeModal').classList.remove('error');
              };

              window.attachSettingsEvents = function() {
                logger.log('Attaching settings event listeners.');
                const settingsContainer = document.getElementById('settings-container');

                const reattach = (id, event, handler) => {
                  const element = document.getElementById(id);
                  if(element) {
                    const newElement = element.cloneNode(true);
                    element.parentNode.replaceChild(newElement, element);
                    newElement.addEventListener(event, handler);
                  } else {
                    logger.warn(`Element with ID '${id}' not found for event attachment.`);
                  }
                };

                reattach('settings-button-submit', 'click', () => anvil.call(settingsContainer, 'submit_click'));
                reattach('settings-button-cancel', 'click', () => anvil.call(settingsContainer, 'cancel_click'));
                reattach("settings-button-favLanguage", 'click', () => window.openModal('favorite-language-modal'));
                reattach("favorite-language-modal-close", 'click', () => window.closeModal('favorite-language-modal'));
                reattach("settings-button-joinStructure", 'click', () => window.openModal('join-structure-modal'));
                reattach("join-modal-close", 'click', () => window.closeModal('join-structure-modal'));
                reattach('settings-button-submitJoinCode', 'click', () => {
                  hideJoinCodeError();
                  const code = document.getElementById('settings-input-joinCodeModal').value;
                  if (!code || code.trim().length !== 6) {
                    showJoinCodeError("Please enter a valid 6-character code.");
                    return;
                  }
                  anvil.call(settingsContainer, 'attempt_to_join_structure', code).then(result => {
                    if (result && !result.success) {
                      showJoinCodeError(result.message);
                    } else {
                      closeJoinModal();
                    }
                  });
                });

                reattach("settings-button-micTest", 'click', () => anvil.call(settingsContainer, 'openMicrophoneTest'));
                reattach("settings-button-installGuide", 'click', () => anvil.call(settingsContainer, 'show_install_guide_click'));
                reattach("settings-button-logout", 'click', () => anvil.call(settingsContainer, 'logout_click'));
                reattach("settings-button-admin", 'click', () => anvil.call(settingsContainer, 'openAdmin'));
              };
            }

            // Attach events every time the form is shown
            window.attachSettingsEvents();

            if (!window.__session_handlers_initialized) {
              window.__session_handlers_initialized = true;
              window.setupSessionHandlers = function() {
                document.addEventListener('visibilitychange', () => {
                  if (document.visibilityState === 'visible') anvil.call(document.getElementById('settings-container'), 'refresh_session_relay');
                });
                window.addEventListener('online', () => anvil.call(document.getElementById('settings-container'), 'refresh_session_relay'));
              };
              window.setupSessionHandlers();
            }
          </script>
        </body>
      </html>
  type: HtmlTemplate
is_package: true
