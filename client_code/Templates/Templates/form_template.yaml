components:
- layout_properties: {slot: default}
  name: header_nav_1
  properties: {active_tab: Templates/AI}
  type: form:Components.HeaderNav
container:
  properties:
    html: "<!DOCTYPE html>\n<html lang=\"fr\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Gestion des Templates/IA</title>\n    <style>\n      /* ---------------------------\n      Global & Layout Styles\n      --------------------------- */\n      * {\n        box-sizing: border-box;\n        font-family: Arial, sans-serif;\n        margin: 0;\n        padding: 0;\n      }\n      body {\n        background-color: #f5f5f5;\n        height: 100vh;\n        overflow: hidden;\n      }\n      .container {\n        display: flex;\n        flex-direction: column;\n        height: 100vh;\n        max-width: 800px;\n        margin: 0 auto;\n        background-color: white;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        position: relative;\n      }\n      .fixed-section {\n        background: white;\n        z-index: 10;\n      }\n      .nav-tabs {\n        display: flex;\n        width: 100%;\n        border-bottom: 1px solid #ddd;\n      }\n      .nav-tab {\n        flex: 1;\n        padding: 8px 16px;\n        cursor: pointer;\n        border: 1px solid #ccc;\n        border-bottom: none;\n        background: #f8f8f8;\n        font-size: 14px;\n        position: relative;\n        margin-right: -1px;\n        text-align: center;\n      }\n      .nav-tab.active {\n        background: #e5e5e5;\n        border-top: 1px solid #999;\n        border-left: 1px solid #999;\n        border-right: 1px solid #999;\n        border-bottom: 1px solid #e5e5e5;\n        margin-bottom: -1px;\n      }\n      .actions-row {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 15px 20px;\n      }\n      .left-section {\n        display: flex;\n        align-items: center;\n        flex: 1;\n        justify-content: space-between;\n      }\n      /* Container for the two buttons */\n      .buttons-container {\n        display: flex;\n        gap: 10px;\n        align-items: center;\n      }\n      .create-button {\n        padding: 8px 16px;\n        background: #fff;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        gap: 5px;\n      }\n      .create-button:hover {\n        background: #f5f5f5;\n      }\n      /* Style for the new personalize button */\n      .personalize-button {\n        padding: 8px 16px;\n        background: #fff;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        cursor: pointer;\n      }\n      .personalize-button:hover {\n        background: #f5f5f5;\n      }\n      .time {\n        color: #666;\n        font-size: 14px;\n      }\n      .search-bar {\n        display: block;\n        width: calc(100% - 40px);\n        padding: 8px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        margin: 0 20px 15px 20px;\n      }\n      .scrollable-content {\n        flex: 1;\n        overflow-y: auto;\n        padding: 20px;\n      }\n      /* ---------------------------\n      Template List Styles\n      --------------------------- */\n      .template-list {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n      }\n      .template-item {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 12px;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        margin-bottom: 8px;\n        background: white;\n      }\n      .template-name {\n        flex-grow: 1;\n        margin-right: 10px;\n      }\n      .template-actions {\n        display: flex;\n        gap: 10px;\n        align-items: center;\n      }\n      .star-icon {\n        cursor: pointer;\n        font-size: 20px;\n      }\n      .edit-button {\n        padding: 4px 8px;\n        background: #f0f0f0;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        cursor: pointer;\n      }\n      .delete-icon {\n        color: #666;\n        cursor: pointer;\n      }\n      /* ---------------------------\n      Custom Scrollbar\n      --------------------------- */\n      .scrollable-content::-webkit-scrollbar {\n        width: 8px;\n      }\n      .scrollable-content::-webkit-scrollbar-track {\n        background: #f1f1f1;\n      }\n      .scrollable-content::-webkit-scrollbar-thumb {\n        background: #888;\n        border-radius: 4px;\n      }\n      .scrollable-content::-webkit-scrollbar-thumb:hover {\n        background: #555;\n      }\n      /* ---------------------------\n      Banner Message\n      --------------------------- */\n      .banner-message {\n        position: absolute;\n        top: 10px;\n        left: 50%;\n        transform: translateX(-50%);\n        background: #fffae6;\n        border: 1px solid #f0e68c;\n        padding: 10px 20px;\n        border-radius: 4px;\n        font-weight: bold;\n        color: #666;\n        z-index: 1000;\n        opacity: 0.95;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <!-- Ce conteneur de banni√®re affichera des messages temporaires -->\n      <div id=\"bannerContainer\"></div>\n\n      <!-- Section fixe : Navigation & Actions -->\n      <div class=\"fixed-section\">\n        <div anvil-slot=\"default\"></div>\n        <div class=\"actions-row\">\n          <div class=\"left-section\">\n            <div class=\"buttons-container\">\n              <button class=\"create-button\" id=\"createBtn\">+ Cr√©er</button>\n              <button class=\"personalize-button\" id=\"personalizeBtn\">Personaliser votre IA</button>\n            </div>\n            <div class=\"time\">--:--</div>\n          </div>\n        </div>\n        <input type=\"text\" class=\"search-bar\" placeholder=\"Rechercher\">\n      </div>\n      <!-- Liste d√©filante des templates -->\n      <div class=\"scrollable-content\">\n        <ul class=\"template-list\" id=\"templateList\">\n          <!-- Inject√© dynamiquement par JS -->\n        </ul>\n      </div>\n    </div>\n\n    <script>\n      // ------------------------------------------------------------\n      // Utilitaire : Afficher un message de banni√®re temporaire\n      // ------------------------------------------------------------\n      function showBanner(message) {\n        const bannerContainer = document.getElementById(\"bannerContainer\");\n        if (!bannerContainer) return;\n        const banner = document.createElement(\"div\");\n        banner.className = \"banner-message\";\n        banner.textContent = message;\n        bannerContainer.appendChild(banner);\n        setTimeout(() => {\n          bannerContainer.removeChild(banner);\n        }, 3000);\n      }\n\n      // ------------------------------------------------------------\n      // 1) D√©clarations globales & fonction populateTemplates\n      // ------------------------------------------------------------\n      if (!window.__templates_globals) {\n        window.__templates_globals = true;\n\n        window.populateTemplates = function(templates) {\n          /*\n          Format attendu pour chaque template :\n          {\n            \"template_name\": \"Un Nom\",\n            \"owner\": ...,\n            \"prompt\": ...,\n            \"human_readable\": ...,\n            \"priority\": 0   // 0, 1 ou 2\n          }\n        */\n          const list = document.getElementById(\"templateList\");\n          if (!list) {\n            console.log(\"populateTemplates: #templateList introuvable\");\n            return;\n          }\n          list.innerHTML = \"\";\n          templates.forEach(tpl => {\n            const li = document.createElement(\"li\");\n            li.className = \"template-item\";\n            li.dataset.priority = tpl.priority || \"0\";\n            li.dataset.name = tpl.template_name;  // stockage de template_name\n\n            // √âl√©ment affichant le nom du template\n            const spanName = document.createElement(\"span\");\n            spanName.className = \"template-name\";\n            spanName.textContent = tpl.template_name || \"Template sans nom\";\n\n            // Conteneur des actions\n            const actionsDiv = document.createElement(\"div\");\n            actionsDiv.className = \"template-actions\";\n\n            // Bouton Modifier - now calls open_template_editor with the template name\n            const editBtn = document.createElement(\"button\");\n            editBtn.className = \"edit-button\";\n            editBtn.textContent = \"Modifier\";\n            editBtn.addEventListener(\"click\", (event) => {\n              // Get the template name and pass it to open_template_editor\n              const templateName = li.dataset.name;\n              console.log(\"Edit button clicked for template:\", templateName);\n              anvil.call(event.target, 'open_template_editor', templateName);\n            });\n\n            // Ic√¥ne de suppression ‚Äì affiche une banni√®re lorsqu'elle est cliqu√©e.\n            const delIcon = document.createElement(\"span\");\n            delIcon.className = \"delete-icon\";\n            delIcon.textContent = \"üóë\";\n            delIcon.addEventListener(\"click\", (event) => {\n              // Prevent the click from bubbling up to other elements\n              event.stopPropagation(); \n              const templateName = li.dataset.name;\n              // Call the client-side Python function\n              anvil.call(event.target, 'delete_template', templateName);\n            });\n\n            actionsDiv.appendChild(editBtn);\n            actionsDiv.appendChild(delIcon);\n\n            li.appendChild(spanName);\n            li.appendChild(actionsDiv);\n            list.appendChild(li);\n          });\n        };\n      }\n\n      // ------------------------------------------------------------\n      // 3) Attacher les √©couteurs d'√©v√©nements pour la navigation, les boutons et la barre de recherche\n      // ------------------------------------------------------------\n      (function attachTemplatesEvents() {\n        console.log(\"TemplatesPage : Attachement des √©couteurs d'√©v√©nements...\");\n\n        // Onglets de navigation\n        const tabs = document.querySelectorAll('.nav-tab');\n        tabs.forEach(tab => {\n          tab.addEventListener('click', (event) => {\n            const currentActive = document.querySelector('.nav-tab.active');\n            if (currentActive) currentActive.classList.remove('active');\n            tab.classList.add('active');\n\n            const tabText = tab.getAttribute(\"data-tab\");\n            if (tabText === 'Production') {\n              anvil.call(event.target, 'open_production_form');\n            } else if (tabText === 'Archives') {\n              anvil.call(event.target, 'open_archives_form');\n            } else if (tabText === 'Param√®tres') {\n              anvil.call(event.target, 'open_settings_form');\n            }\n            // Pour l'onglet Mod√®les/IA, nous sommes d√©j√† sur cette page.\n          });\n        });\n\n        // Bouton Cr√©er - now opens the template editor directly\n        const createBtn = document.getElementById('createBtn');\n        if (createBtn) {\n          createBtn.replaceWith(createBtn.cloneNode(true));\n          const newCreateBtn = document.getElementById('createBtn');\n          newCreateBtn.addEventListener('click', (event) => {\n            console.log(\"Create button clicked, opening template editor\");\n            anvil.call(event.target, 'open_template_editor');\n          });\n        }\n\n        // Bouton Personaliser votre IA ‚Äì affiche une banni√®re lorsqu'il est cliqu√©\n        const personalizeBtn = document.getElementById('personalizeBtn');\n        if (personalizeBtn) {\n          personalizeBtn.replaceWith(personalizeBtn.cloneNode(true));\n          const newPersonalizeBtn = document.getElementById('personalizeBtn');\n          newPersonalizeBtn.addEventListener('click', (event) => {\n            showBanner(\"fonctionalit√© en cours de d√©veloppement par les √©quipes Checkvet\");\n          });\n        }\n\n        // ------------------------------------------------------------------------\n        // Gestion de la barre de recherche pour les templates\n        // ------------------------------------------------------------------------\n        const searchInput = document.querySelector('.search-bar');\n        if (searchInput) {\n          searchInput.addEventListener('input', function(event) {\n            const query = event.target.value;\n            anvil.call(event.target, 'search_templates_client', query);\n          });\n        }\n\n        console.log(\"TemplatesPage : √âcouteurs d'√©v√©nements attach√©s.\");\n      })();\n\n      // ------------------------------------------------------------\n      // 4) Affichage de l'heure\n      // ------------------------------------------------------------\n      function updateTime() {\n        const now = new Date();\n        const hrs = now.getHours().toString().padStart(2, '0');\n        const mins = now.getMinutes().toString().padStart(2, '0');\n        document.querySelector('.time').textContent = `${hrs}h${mins}`;\n      }\n      updateTime();\n      setInterval(updateTime, 60000);\n    </script>\n    <!-- Add this simple script to your forms -->\n    <script>\n      // Initialize only once\n      if (!window.__session_handlers_initialized) {\n        window.__session_handlers_initialized = true;\n\n        // Session handler setup\n        window.setupSessionHandlers = function() {\n          // Tab visibility change\n          document.addEventListener('visibilitychange', function() {\n            if (document.visibilityState === 'visible') {\n              anvil.call(document.body, 'refresh_session_relay');\n            }\n          });\n\n          // Online status change\n          window.addEventListener('online', function() {\n            anvil.call(document.body, 'refresh_session_relay');\n          });\n        };\n      }\n    </script>\n  </body>\n</html>"
  type: HtmlTemplate
is_package: true
